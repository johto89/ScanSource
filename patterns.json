{
  "patterns": [
    {
      "type": "iOS Sensitive Information Exposure",
      "fileExtensions": [ "*.swift", "*.m", "*.mm", "*.h", "*.plist", "*.strings", "*.json", "*.xml" ],
      "patterns": [
        "apikey\\s*=\\s*['\"][0-9a-zA-Z\\-]{20,}['\"]",
        "api_key\\s*=\\s*['\"][0-9a-zA-Z\\-]{20,}['\"]",
        "password\\s*=\\s*['\"][^'\"]+['\"]",
        "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b"
      ],
      "whitelist": [
        "validateApiKey",
        "checkCredentials",
        "testEnvironment",
        "dummyKey"
      ],
      "severity": "HIGH",
      "cweId": "CWE-200"
    },
    {
      "type": "iOS Network Security",
      "fileExtensions": [ "*.swift", "*.m", "*.mm", "*.h", "*.plist", "*.xml" ],
      "patterns": [
        "http://",
        "NSAllowsArbitraryLoads\\s*=\\s*true",
        "allowsInvalidCertificates\\s*=\\s*true",
        "validatesDomainName\\s*=\\s*false",
        "NSURLProtectionSpaceHTTP",
        "NSStreamSocketSSLLevel",
        "allowsAnyHTTPSCertificate\\s*=\\s*true"
      ],
      "whitelist": [
        "isHTTPSOnly",
        "validateCertificate",
        "enforceSSL",
        "secureCommunication"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-319"
    },
    {
      "type": "iOS URL Scheme Handling",
      "fileExtensions": [ "*.swift", "*.m", "*.mm", "*.h", "*.plist" ],
      "patterns": [
        "canOpenURL:",
        "openURL:",
        "UIApplication\\.shared\\.open\\(",
        "application\\(\\w+\\)\\s*handleOpenURL:"
      ],
      "whitelist": [
        "validateURL",
        "sanitizeInput",
        "whitelistedSchemes"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-601"
    },
    {
      "type": "iOS Data Storage",
      "fileExtensions": [ "*.swift", "*.m", "*.mm", "*.h" ],
      "patterns": [
        "kSecAttrAccessible\\s*=\\s*kSecAttrAccessibleAlways",
        "NSUserDefaults\\.standard\\.set\\(",
        "FileManager\\.default\\.urls\\(for:\\s*\\.documentDirectory",
        "CommonCrypto\\/CommonCrypto\\.h",
        "CC_MD5_Init\\(",
        "SHA1_Init\\(",
        "algorithm\\s*=\\s*\\.MD5"
      ],
      "whitelist": [
        "kSecAttrAccessibleWhenUnlocked",
        "encryptedStorage",
        "secureDataHandling"
      ],
      "severity": "HIGH",
      "cweId": "CWE-311"
    },
    {
      "type": "iOS WebView Security",
      "fileExtensions": [ "*.swift", "*.m", "*.mm", "*.h" ],
      "patterns": [
        "WKWebView\\.configuration\\.userContentController",
        "evaluateJavaScript:",
        "loadHTMLString:",
        "javaScriptEnabled\\s*=\\s*true"
      ],
      "whitelist": [
        "sanitizeJavaScript",
        "validateContent",
        "secureWebView"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-79"
    },
    {
      "type": "iOS Runtime Manipulation",
      "fileExtensions": [ "*.swift", "*.m", "*.mm", "*.h" ],
      "patterns": [
        "eval\\(",
        "performSelector:",
        "NSInvocation",
        "method_exchangeImplementations"
      ],
      "whitelist": [
        "safeMethodCall",
        "validatedSelector",
        "secureInvocation"
      ],
      "severity": "HIGH",
      "cweId": "CWE-94"
    },
    {
      "type": "Android Intent and WebView",
      "fileExtensions": [ "*.java", "*.kt", "*.xml" ],
      "patterns": [
        "Intent\\s*=\\s*[^\"]+",
        "startActivity\\s*\\([^)]*\\)",
        "startService\\s*\\([^)]*\\)",
        "sendBroadcast\\s*\\([^)]*\\)",
        "startActivityForResult\\s*\\([^)]*\\)",
        "webview\\s*\\.loadUrl\\s*\\([^)]*\\)",
        "webview\\s*\\.setWebViewClient\\s*\\([^)]*\\)",
        "webview\\s*\\.setJavaScriptEnabled\\s*=\\s*true",
        "webview\\s*\\.addJavascriptInterface\\s*\\([^)]*\\)"
      ],
      "whitelist": [
        "validateIntent",
        "sanitizeInput",
        "checkOrigin",
        "secureWebView",
        "webViewSecurity",
        "SafeWebViewClient"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-926"
    },
    {
      "type": "Android Content Provider",
      "fileExtensions": [ "*.java", "*.kt", "*.xml" ],
      "patterns": [
        "content\\s*=\\s*[\"'].*[\"']\\s*\\(.+\\)",
        "ContentProvider\\s*\\.query\\s*\\([^)]*\\)",
        "ContentResolver\\s*\\.query\\s*\\([^)]*\\)",
        "ContentProvider\\s*\\.insert\\s*\\([^)]*\\)",
        "ContentProvider\\s*\\.update\\s*\\([^)]*\\)",
        "ContentProvider\\s*\\.delete\\s*\\([^)]*\\)"
      ],
      "whitelist": [
        "validateQuery",
        "sanitizeInput",
        "contentPermission",
        "secureProvider"
      ],
      "severity": "HIGH",
      "cweId": "CWE-200"
    },
    {
      "type": "Android Component Export",
      "fileExtensions": [ "*.xml" ],
      "patterns": [
        "android:exported\\s*=\\s*[\"']true[\"']",
        "intent-filter.*action.*android\\.intent\\.action\\.",
        "<provider.*android:exported\\s*=\\s*[\"']true[\"']",
        "<activity.*android:exported\\s*=\\s*[\"']true[\"']",
        "<service.*android:exported\\s*=\\s*[\"']true[\"']",
        "<receiver.*android:exported\\s*=\\s*[\"']true[\"']"
      ],
      "whitelist": [
        "android:permission",
        "android:protectionLevel=\"signature\"",
        "validateIntent",
        "checkPermission"
      ],
      "severity": "HIGH",
      "cweId": "CWE-200"
    },
    {
      "type": "Android Fragment Injection",
      "fileExtensions": [ "*.java", "*.kt" ],
      "patterns": [
        "Fragment\\s+fragment\\s*=\\s*.+?\\.instantiate\\(",
        "getSupportFragmentManager\\(\\)\\.findFragmentById\\(",
        "getFragmentManager\\(\\)\\.findFragmentById\\(",
        "loadUrl\\s*\\(\\s*\"javascript:"
      ],
      "whitelist": [
        "validateFragment",
        "secureFragmentLoad",
        "sanitizeJavaScript"
      ],
      "severity": "HIGH",
      "cweId": "CWE-94"
    },
    {
      "type": "Android Manifest Permissions",
      "fileExtensions": [ "*.xml" ],
      "patterns": [
        "android\\.permission\\.(SYSTEM_ALERT_WINDOW|WRITE_SETTINGS|PACKAGE_USAGE_STATS|BIND_DEVICE_ADMIN|FACTORY_TEST)",
        "android\\.permission\\.(READ|WRITE)_(CALENDAR|CONTACTS|PHONE_STATE|CALL_LOG|SMS)",
        "android\\.permission\\.(CAMERA|GET_ACCOUNTS|ACCESS_FINE_LOCATION|RECORD_AUDIO)",
        "android:protectionLevel\\s*=\\s*['\"](?:normal|dangerous)['\"]",
        "android:debuggable\\s*=\\s*['\"]true['\"]",
        "android:allowBackup\\s*=\\s*['\"]true['\"]",
        "android:testOnly\\s*=\\s*['\"]true['\"]"
      ],
      "whitelist": [
        "android:protectionLevel=\"signature\"",
        "android:permission",
        "requestPermissions",
        "checkSelfPermission",
        "verifyPermissions"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-276"
    },
    {
      "type": "Open Redirect",
      "fileExtensions": [ "*.js", "*.jsx", "*.ts", "*.tsx", "*.html", "*.htm", "*.php", "*.asp", "*.aspx", "*.jsp", "*.py", "*.rb", "*.go", "*.cs", "*.vb", "*.java", "*.kt", "*.swift", "*.m", "*.mm" ],
      "patterns": [
        "window\\.location(?:\\.href|\\.replace|\\.assign)?\\s*[=\\(]",
        "document\\.location\\s*=",
        "navigate\\s*\\(",
        "location\\.(?:replace|assign)\\s*\\(",
        "Response\\.Redirect\\s*\\(",
        "Server\\.Transfer\\s*\\(",
        "header\\s*\\(\\s*[`\"']Location:\\s*[`\"']",
        "sendRedirect\\s*\\(",
        "redirect\\s*\\(",
        "HttpResponseRedirect\\s*\\(",
        "response\\.sendRedirect\\s*\\(",
        "setHeader\\s*\\(\\s*[`\"']Location[`\"']\\s*,",
        "redirect_to\\s*[\\(\\s]",
        "http\\.Redirect\\s*\\(",
        "Redirect(?:Action|Route|Page|Permanent|Result)\\s*\\(",
        "(?:url|redirect_url|returnUrl|returnTo|target|destination)\\s*=\\s*(?:\\$_(?:GET|POST|REQUEST)|params|request)"
      ],
      "whitelist": [
        "LocalRedirect\\s*\\(",
        "RedirectToAction\\s*\\(",
        "RedirectToPage\\s*\\(",
        "RedirectToRoute\\s*\\(",
        "RedirectToLocal\\s*\\(",
        "ValidateUrl\\s*\\(",
        "UrlValidator\\s*\\(",
        "IsLocalUrl\\s*\\(",
        "validateRedirectUrl\\s*\\(",
        "IsValidRedirectUrl\\s*\\(",
        "SanitizeRedirectUrl\\s*\\(",
        "Url\\.IsLocalUrl\\s*\\("
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-601"
    },
    {
      "type": "SQL Injection",
      "fileExtensions": [ "*.php", "*.asp", "*.aspx", "*.jsp", "*.py", "*.rb", "*.go", "*.cs", "*.vb", "*.java", "*.kt", "*.js", "*.ts", "*.sql" ],
      "patterns": [
        "SELECT\\s+.*\\+.*WHERE",
        "INSERT\\s+.*\\+.*VALUES",
        "UPDATE\\s+.*SET.*\\+",
        "DELETE\\s+.*WHERE.*\\+",
        "\\$_(?:GET|POST|REQUEST)\\s*\\[.*\\]\\s*[+.]",
        "params\\[.*\\]\\s*[+.].*(?:SELECT|INSERT|UPDATE|DELETE)",
        "request\\.getParameter\\s*\\(.*\\)\\s*[+.]",
        "query\\s*=\\s*[\"'].*[\"'].*\\+",
        "sql\\s*=\\s*[\"'].*[\"'].*\\+",
        "executeQuery\\s*\\(\\s*[\"'].*\\+",
        "exec\\s*\\(\\s*[\"'].*\\+"
      ],
      "whitelist": [
        "PreparedStatement",
        "parameterizedQuery",
        "sqlCommand\\.Parameters",
        "bindParam",
        "sanitizeInput",
        "escapeString"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-89"
    },
    {
      "type": "XSS (Cross-Site Scripting)",
      "fileExtensions": [ "*.html", "*.htm", "*.php", "*.asp", "*.aspx", "*.jsp", "*.js", "*.jsx", "*.ts", "*.tsx", "*.vue", "*.erb", "*.ejs" ],
      "patterns": [
        "echo\\s+\\$_(?:GET|POST|REQUEST)",
        "document\\.write\\s*\\(",
        "innerHTML\\s*=.*(?:\\$_|params|request)",
        "outerHTML\\s*=.*(?:\\$_|params|request)",
        "eval\\s*\\(",
        "setTimeout\\s*\\(.*(?:\\$_|params|request)",
        "setInterval\\s*\\(.*(?:\\$_|params|request)",
        "\\{\\{.*\\$_.*\\}\\}",
        "\\<%=.*request.*%\\>",
        "\\${.*request.*}"
      ],
      "whitelist": [
        "htmlspecialchars",
        "htmlentities",
        "AntiXssEncoder",
        "sanitizeHtml",
        "escapeHtml",
        "textContent"
      ],
      "severity": "HIGH",
      "cweId": "CWE-79"
    },
    {
      "type": "CSRF (Cross-Site Request Forgery)",
      "fileExtensions": [ "*.html", "*.htm", "*.php", "*.asp", "*.aspx", "*.jsp", "*.py", "*.rb", "*.cs", "*.vb" ],
      "patterns": [
        "<form[^>]*method\\s*=\\s*[\"']post[\"'][^>]*>(?!.*csrf)",
        "<form[^>]*action\\s*=.*>(?!.*token)",
        "\\$\\.post\\s*\\(",
        "\\$\\.ajax\\s*\\({[^}]*type\\s*:\\s*[\"']POST[\"']",
        "fetch\\s*\\([^)]*{\\s*method\\s*:\\s*[\"']POST[\"']"
      ],
      "whitelist": [
        "csrf_token",
        "authenticity_token",
        "__RequestVerificationToken",
        "validateCsrfToken",
        "csrfProtection"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-352"
    },
    {
      "type": "Path Traversal",
      "fileExtensions": [ "*.php", "*.asp", "*.aspx", "*.jsp", "*.py", "*.rb", "*.go", "*.cs", "*.vb", "*.java", "*.kt" ],
      "patterns": [
        "\\.\\./",
        "\\\\\\.\\.\\\\",
        "\\$_(?:GET|POST|REQUEST)\\[.*\\].*(?:include|require|file_get_contents)",
        "File\\.Read.*\\$_",
        "FileInputStream.*request\\."
      ],
      "whitelist": [
        "realpath",
        "basename",
        "pathinfo",
        "validatePath",
        "sanitizePath"
      ],
      "severity": "HIGH",
      "cweId": "CWE-22"
    },
    {
      "type": "PowerShell Execution",
      "fileExtensions": [ "*.ps1", "*.psm1", "*.psd1" ],
      "patterns": [
        "Invoke-Expression",
        "iex\\s",
        "Start-Process.*-NoNewWindow.*-PassThru",
        "cmd\\s*/c"
      ],
      "whitelist": [
        "ValidateSet\\(",
        "Parameter\\(Mandatory\\=\\$true\\)",
        "-ErrorAction\\s+(Stop|SilentlyContinue)"
      ],
      "severity": "HIGH",
      "cweId": "CWE-94"
    },
    {
      "type": "PowerShell Input Validation",
      "fileExtensions": [ "*.ps1", "*.psm1", "*.psd1" ],
      "patterns": [
        "\\$args\\[\\d+\\](?!\\s*-match|\\s*-like|\\s*-eq)",
        "Read-Host.*-AsSecureString.*ConvertFrom-SecureString",
        "Get-Content.*\\|\\s*Out-String.*\\|\\s*Invoke-Expression"
      ],
      "whitelist": [
        "Test-Path\\s",
        "if\\s*\\(\\s*-not\\s",
        "try\\s*\\{.*catch"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-20"
    },
    {
      "type": "PowerShell Network Security",
      "fileExtensions": [ "*.ps1", "*.psm1", "*.psd1" ],
      "patterns": [
        "Invoke-WebRequest.*-UseBasicParsing.*http://",
        "Invoke-RestMethod.*http://",
        "Net\\.WebClient.*http://",
        "System\\.Net\\.WebRequest.*http://",
        "-SkipCertificateCheck",
        "ServerCertificateValidationCallback.*\\$true"
      ],
      "whitelist": [
        "https://",
        "validateCertificate",
        "enforceSSL",
        "Test-Certificate"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-319"
    },
    {
      "type": "Network Security Issues",
      "fileExtensions": [ "*.ps1", "*.psm1", "*.psd1", "*.swift", "*.m", "*.mm", "*.h", "*.plist", "*.xml", "*.js", "*.py", "*.php", "*.cs", "*.java" ],
      "patterns": [
        "http://",
        "NSAllowsArbitraryLoads\\s*=\\s*true",
        "allowsInvalidCertificates\\s*=\\s*true",
        "validatesDomainName\\s*=\\s*false",
        "IgnoreServerCertificateValidation",
        "-SkipCertificateCheck",
        "System\\.Net\\.ServicePointManager\\.ServerCertificateValidationCallback"
      ],
      "whitelist": [
        "isHTTPSOnly",
        "validateCertificate",
        "enforceSSL",
        "secureCommunication",
        "https://"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-319"
    },
    {
      "type": "Sensitive Information in Code",
      "fileExtensions": [ "*.ps1", "*.psm1", "*.psd1", "*.swift", "*.m", "*.mm", "*.h", "*.json", "*.xml", "*.js", "*.py", "*.php", "*.cs", "*.java", "*.rb", "*.go" ],
      "patterns": [
        "apikey\\s*=\\s*['\"][0-9a-zA-Z\\-_]{20,}['\"]",
        "api_key\\s*=\\s*['\"][0-9a-zA-Z\\-_]{20,}['\"]",
        "password\\s*=\\s*['\"][^'\"]{6,}['\"]",
        "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b",
        "sk-[a-zA-Z0-9]{20,}",
        "\\$[a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*['\"][0-9a-fA-F]{20,}['\"]"
      ],
      "whitelist": [
        "validateApiKey",
        "checkCredentials",
        "testEnvironment",
        "dummyKey",
        "example@",
        "test@",
        "placeholder"
      ],
      "severity": "HIGH",
      "cweId": "CWE-200"
    },
    {
      "type": "XXE (XML External Entity)",
      "fileExtensions": [ "*.xml", "*.java", "*.cs", "*.php", "*.py", "*.rb", "*.go" ],
      "patterns": [
        "XmlReaderSettings",
        "DtdProcessing\\.Parse",
        "XmlResolver",
        "XmlUrlResolver",
        "DocumentBuilderFactory",
        "SAXParserFactory",
        "XMLInputFactory",
        "simplexml_load",
        "loadXML",
        "DOMDocument::load",
        "<!DOCTYPE",
        "<!ENTITY",
        "SYSTEM\\s+\"",
        "__class__|__globals__|__builtins__"
      ],
      "whitelist": [
        "DtdProcessing\\.Prohibit",
        "XmlResolver\\s*=\\s*null",
        "defusedxml",
        "LIBXML_NOENT\\s*\\|\\s*LIBXML_NONET",
        "setFeature.*external-general-entities.*false"
      ],
      "severity": "HIGH",
      "cweId": "CWE-611"
    },
    {
      "type": "Hardcoded Secrets",
      "fileExtensions": [ "*.js", "*.py", "*.php", "*.cs", "*.java", "*.rb", "*.go", "*.swift", "*.m" ],
      "patterns": [
        "google_api\\s*:\\s*AIza[0-9A-Za-z-_]{35}",
        "firebase\\s*:\\s*AAAA[A-Za-z0-9_-]{7}:[A-Za-z0-9_-]{140}",
        "amazon_aws_access_key_id\\s*:\\s*A[SK]IA[0-9A-Z]{16}",
        "password\\s*[=:]\\s*[\\\"'](.*?)[\\\"']",
        "secret\\s*[=:]\\s*[\\\"'](.*?)[\\\"']",
        "apikey\\s*[=:]\\s*[\\\"'](.*?)[\\\"']",
        "api_key\\s*[=:]\\s*[\\\"'](.*?)[\\\"']",
        "token\\s*[=:]\\s*[\\\"'](.*?)[\\\"']"
      ],
      "whitelist": [
        "(?i)(?:secret|credential|vault|config|environment|dotenv|secure)(?:manager|provider|helper)?",
        "\\.(?:sample|example|test|mock)$",
        "(?i)(?:mock|dummy|placeholder|example)(?:_|\\s)?secret"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-798"
    },
    {
      "type": "Buffer Overflows",
      "fileExtensions": [ "*.c", "*.cpp", "*.h", "*.hpp" ],
      "patterns": [
        "\\b(?:str(?:cpy|cat|ncat|len|dup|str|tok)|gets|getchar)\\s*\\(",
        "\\b(?:[v]?s[n]?printf|[v]?scanf|fscanf|sscanf)\\s*\\(",
        "\\bfgets(?!_s)\\s*\\(",
        "\\bmem(?:cpy|move|set|cmp|chr)\\s*\\(",
        "\\b(?:m|c|re)alloc\\s*\\(",
        "\\[\\s*[^]]+\\s*[+\\-*/]\\s*\\d+\\s*\\]"
      ],
      "whitelist": [
        "std::(?:string|string_view|vector|array|span)",
        "\\b(?:strn(?:cpy|cat)|strl(?:cpy|cat))_s\\s*\\(",
        "\\bsn?printf_s\\s*\\(",
        "validate_input",
        "bounds_check"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-120"
    },
    {
      "type": "Command Execution",
      "fileExtensions": [ "*.php", "*.py", "*.rb", "*.java", "*.cs", "*.go", "*.js" ],
      "patterns": [
        "cmd\\.exe",
        "powershell\\.exe",
        "bash",
        "sh\\s+-c",
        "Process\\.Start",
        "Runtime\\.exec",
        "subprocess\\.(Popen|call|run)",
        "os\\.(system|popen|spawn)",
        "exec\\(",
        "shell_exec"
      ],
      "whitelist": [
        "escapeshellarg",
        "escapeshellcmd",
        "shlex\\.(quote|split)",
        "ValidateInput",
        "ProcessStartInfo\\s*\\{\\s*UseShellExecute\\s*=\\s*false"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-78"
    },
    {
      "type": "Weak Cryptography",
      "fileExtensions": [ "*.js", "*.py", "*.php", "*.cs", "*.java", "*.rb", "*.go", "*.c", "*.cpp" ],
      "patterns": [
        "(?i)(DES|RC[2-4]|MD[2-5]|DESX|Blowfish|IDEA)\\b(?!.*test)",
        "(?i)SHA[-_\\s]?0*1\\b(?!.*test)",
        "(?i)ECB[-_\\s]?mode",
        "(?i)\\b(Random|rand|mt_rand|Math\\.random)\\s*\\(",
        "(?i)(key[-_\\s]?size|key[-_\\s]?length)\\s*[=:]\\s*(40|56|64|128)\\b"
      ],
      "whitelist": [
        "(?i)AES[-_\\s]?(128|192|256)",
        "(?i)SHA[-_\\s]?(224|256|384|512)",
        "(?i)(PBKDF2|bcrypt|scrypt|Argon2)",
        "(?i)(SecureRandom|RNGCryptoServiceProvider)"
      ],
      "severity": "HIGH",
      "cweId": "CWE-327"
    },
    {
      "type": "IDOR (Insecure Direct Object References)",
      "fileExtensions": [ "*.php", "*.java", "*.cs", "*.py", "*.rb", "*.js", "*.go" ],
      "patterns": [
        "(?i)(?:find|get|select|load|fetch)(?:By|One|First)?\\s*(?:Id|UUID)?\\s*\\(\\s*(?:\\$_(?:GET|POST|REQUEST)|params|request|input|req\\.[a-z]+)\\s*\\)",
        "(?i)SELECT.*?WHERE.*?(?:id|uuid|user_id)\\s*=\\s*(?:\\$_(?:GET|POST|REQUEST)|params|request|input|req\\.[a-z]+)",
        "\\$_(?:GET|POST|REQUEST)\\[['\"](?:id|uuid|user_id)['\"]\\](?![^}]*?(?:authorize|authenticate))",
        "find(?:ById)?\\(\\s*\\$\\w*[iI]d\\w*\\s*\\)",
        "->find\\(\\s*\\$\\w*[iI]d\\w*\\s*\\)",
        "WHERE\\s+\\w*[iI]d\\s*=\\s*\\$\\w+",
        "mysql(i)?_query\\(.*\\.\\s*\\$\\w*[iI]d",
        "\\$query\\s*=\\s*['\"].*WHERE.*['\"].\\s*\\$\\w*[iI]d",
        "\\$_(GET|POST|REQUEST)\\[['\"]\\w*[iI]d\\w*['\"]\\]",
        "\\.Find(?:Async)?\\(\\s*\\w+\\s*\\)",
        "\\.(First|Single)OrDefault\\(\\s*\\w*\\s*=>\\s*\\w*\\.Id\\s*==\\s*\\w+\\s*\\)",
        "\\.Where\\(\\s*\\w*\\s*=>\\s*\\w*\\.Id\\s*==\\s*\\w+\\s*\\)\\.First",
        "\\[Http(Get|Post|Put|Delete)\\(.*\\{\\w*[iI]d\\w*.*\\}\\)\\]",
        "\\[Route\\(.*\\{\\w*[iI]d\\w*.*\\}\\)\\]",
        "\\.GetById(?:Async)?\\(\\s*\\w+\\s*\\)",
        "request\\.getParameter\\(['\"]\\w*[iI]d\\w*['\"]\\)",
        "\\.(findById|find)\\(\\s*\\w*[iI]d\\w*\\s*\\)",
        "set(String|Int)\\(\\s*\\d+\\s*,\\s*(request\\.getParameter|Integer\\.parseInt\\(request\\.getParameter)",
        "@(Get|Post|Put|Delete)Mapping\\(.*\\{\\w*[iI]d\\w*.*\\}\\)",
        "@(PathVariable|RequestParam).*\\w*[iI]d\\w*",
        "request\\.(GET|POST|args|form)\\.get\\(['\"]\\w*[iI]d\\w*['\"]\\)",
        "\\.(filter|get)\\(\\w*[iI]d\\w*=\\w*[iI]d\\w*\\)",
        "\\.objects\\.get\\(id=\\w*[iI]d\\w*\\)",
        "get_object_or_404\\(\\w+,\\s*id=\\w*[iI]d\\w*\\)",
        "@app\\.route\\(.*<.*\\w*[iI]d\\w*.*>",
        "path\\(.*<int:\\w*[iI]d\\w*>",
        "url\\(.*\\?P<\\w*[iI]d\\w*>",
        "params\\[:\\w*[iI]d\\w*\\]",
        "params\\[['\"]\\w*[iI]d\\w*['\"]\\]",
        "\\.(find|find_by_id)\\(params\\[:\\w*[iI]d\\w*\\]\\)",
        "where\\(id:\\s*params\\[:\\w*[iI]d\\w*\\]\\)",
        "(get|post|put|delete)\\s+['\"].*/.*:\\w*[iI]d\\w*",
        "resources\\s+:\\w+.*member",
        "r\\.(URL\\.Query\\(\\)|FormValue)\\(['\"]\\w*[iI]d\\w*['\"]\\)",
        "mux\\.Vars\\(r\\)\\[['\"]\\w*[iI]d\\w*['\"]\\]",
        "\\.Where\\(['\"]\\w*[iI]d\\s*=\\s*\\?['\"],\\s*\\w*[iI]d\\)",
        "\\.(First|Find)\\(&\\w+,\\s*\\w*[iI]d\\)",
        "req\\.(query|body|params)\\.\\w*[iI]d\\w*",
        "\\.(findById|findOne)\\(\\s*(\\{|)?\\s*['\"]?_id['\"]?\\s*:\\s*req\\..*?\\)",
        "\\.where\\(['\"]\\w*[iI]d\\w*['\"],\\s*req\\..*?\\)",
        "(app|router)\\.(get|post|put|delete)\\(.*:\\w*[iI]d\\w*",
        "<input\\s+type=['\"]hidden['\"].*name=['\"].*(id|userId|user_id|customerId|employee_id).*['\"]"
      ],
      "whitelist": [
        "(?i)(?:Authorize|Authenticate|CheckPermission|ValidateAccess)",
        "@(?:PreAuthorize|Secured|RequiresPermission)",
        "\\[Authorize\\]",
        "(?i)(?:current_user|authenticated_user)\\.(?:id|uuid)"
      ],
      "severity": "HIGH",
      "cweId": "CWE-639"
    },
    {
      "type": "Weak Password Policy",
      "fileExtensions": [ "*.js", "*.py", "*.php", "*.cs", "*.java", "*.rb", "*.go", "*.config", "*.json" ],
      "patterns": [
        "minLength\\s*[:=]\\s*[1-11]\\b",
        "minimumLength\\s*[:=]\\s*[1-11]\\b",
        "(?i)require(?:Digit|Uppercase|Lowercase|Special|Symbol)s?\\s*[:=]\\s*(?:false|0|FALSE|False)",
        "(?i)(?:password|pwd|pass)\\s*[:=]\\s*[\"'`][^\"'`]+[\"'`](?!\\s*\\{)",
        "(?i)password\\s*[:=]\\s*[\"'`](?:[^\"'`]*(?:password|admin|root|123)|[^\"'`]{1,7})[\"'`]"
      ],
      "whitelist": [
        "(?i)Password(?:Validator|Policy|Service|Handler)",
        "(?i)(?:BCrypt|Argon2|PBKDF2|Scrypt)",
        "RequiredLength\\s*[>=]\\s*12",
        "RequireDigit\\s*=\\s*true",
        "RequireUppercase\\s*=\\s*true"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-521"
    },
    {
      "type": "Session and Authentication Management",
      "fileExtensions": [ "*.php", "*.java", "*.cs", "*.py", "*.rb", "*.js", "*.go" ],
      "patterns": [
        "(?i)\\b(session\\.(abandon|clear|destroy|invalidate|end|remove))\\b",
        "(?i)\\b(HttpContext\\.Session\\.(Clear|Remove))\\b",
        "(?i)\\b(request\\.getSession\\(\\w*\\)\\.invalidate)\\b",
        "(?i)\\b(session_(destroy|unset|regenerate_id))\\b",
        "(?i)(\\$_SESSION\\s*=\\s*(\\[\\]|array\\(\\)))",
        "(?i)\\b(session\\.(clear|pop|invalidate|destroy|reset_session))\\b",
        "(?i)\\b(Identity\\.(SignIn|SignOut)Async)\\b",
        "(?i)\\b(@Secured|\\@PreAuthorize|\\@RolesAllowed)\\b",
        "(?i)\\b(SecurityContextHolder\\.getContext\\(\\))\\b",
        "(?i)\\b(auth\\.(check|attempt|login|logout))\\b",
        "(?i)\\b(@login_required|@auth\\.requires_auth)\\b",
        "(?i)\\b(before_action :authenticate)\\b",
        "(?i)\\b(auth\\.RequireAuth|middleware\\.Auth)\\b",
        "(?i)\\b(jwt\\.(sign|verify|decode))\\b",
        "(?i)\\b(token\\.(create|validate|refresh))\\b",
        "(?i)\\b(JwtSecurityTokenHandler)\\b",
        "(?i)(cookie\\.(secure|httpOnly|sameSite)\\s*=\\s*(false|none))",
        "(?i)(Set-Cookie:.*?(secure|httpOnly))",
        "(?i)\\b(password\\.(hash|verify|validate))\\b",
        "(?i)\\b(credentials\\.(verify|validate))\\b",
        "(?i)\\b(bcrypt\\.(hash|compare))\\b",
        "(?i)\\b(mfa\\.(enable|verify|disable))\\b",
        "(?i)\\b(totp\\.(generate|verify))\\b",
        "(?i)\\b((memcached|redis)\\.set)\\b",
        "(?i)\\b(cache\\.(set|get|remove))\\b"
      ],
      "whitelist": [
        "(?i)(session\\.cookie_secure\\s*=\\s*true)",
        "(?i)(requireSSL\\s*=\\s*true)",
        "(?i)(UseHttps\\(\\))",
        "(?i)\\b(passwordHasher\\.HashPassword)\\b",
        "(?i)\\b(BCrypt\\.GenerateSalt\\(\\d+\\))\\b",
        "(?i)\\b(argon2|scrypt|pbkdf2)\\b",
        "(?i)(jwt\\.sign.*?algorithm:\\s*[\"''](?:HS256|RS256))",
        "(?i)(tokenValidation\\.validateLifetime\\s*=\\s*true)",
        "(?i)\\b(AddHeadersToResponse)\\b",
        "(?i)\\b(UseHsts\\(\\))\\b",
        "(?i)\\b(helmet\\.(use|config))\\b",
        "(?i)\\b(@ValidateAntiForgeryToken)\\b",
        "(?i)(csrf\\.required\\s*=\\s*true)",
        "(?i)\\b(antiforgery\\.(validate|verify))\\b",
        "(?i)(cookie\\.HttpOnly\\s*=\\s*true)",
        "(?i)(cookie\\.SameSite\\s*=\\s*Strict)",
        "(?i)\\b(https\\.use|requireHttps)\\b",
        "(?i)\\b(ForceSSL|RequireSSL)\\b",
        "(?i)(redis\\.(tls|ssl)\\.enable)",
        "(?i)(memcached\\.sasl)",
        "(?i)\\b(mock(Auth|Session|Token))\\b",
        "(?i)\\b(test(Authentication|Authorization))\\b"
      ],
      "severity": "HIGH",
      "cweId": "CWE-287"
    },
    {
      "type": "SSRF (Server-Side Request Forgery)",
      "fileExtensions": [ "*.php", "*.java", "*.cs", "*.py", "*.rb", "*.js", "*.go" ],
      "patterns": [
        "(?:https?|ftp|file|gopher|dict)://[^/]+/.*?\\$(?:_GET|_POST|_REQUEST)",
        "localhost|127\\.0\\.0\\.1|0\\.0\\.0\\.0|::1",
        "WebClient\\.(Down|Up)load\\w*\\s*\\(\\s*\\$?(?:request|input)",
        "HttpWebRequest\\.Create\\s*\\(\\s*\\$?(?:request|input)",
        "new\\s+HttpClient\\(\\)\\.(?:Get|Post|Send|Delete)\\w*\\s*\\(\\s*\\$?(?:request|input)",
        "(?:URL|URI)\\.(?:new|create)\\s*\\(\\s*(?:request|input)",
        "(?:Http(?:URL)?Connection|URLConnection)\\.(?:connect|open)\\s*\\(\\s*(?:request|input)",
        "OkHttpClient\\.newBuilder\\(\\)\\.url\\s*\\(\\s*(?:request|input)",
        "requests\\.(?:get|post|put|delete)\\s*\\(\\s*(?:request|input)",
        "urllib\\d?\\.(?:request\\.)?(?:urlopen|Request)\\s*\\(\\s*(?:request|input)",
        "aiohttp\\.Client\\(\\)\\.(?:get|post|put|delete)\\s*\\(\\s*(?:request|input)",
        "(?:file_get_contents|fopen|curl_exec)\\s*\\(\\s*\\$(?:_GET|_POST|_REQUEST)",
        "curl_setopt\\s*\\(\\s*\\$ch\\s*,\\s*CURLOPT_URL\\s*,\\s*\\$(?:_GET|_POST|_REQUEST)",
        "stream_context_create\\s*\\(\\s*.*?https?://.*?\\$(?:_GET|_POST|_REQUEST)",
        "http\\.(?:NewRequest|Get|Post)\\s*\\(\\s*[^,]*?,\\s*(?:r\\.|req\\.)",
        "http\\.Client\\.Do\\s*\\(\\s*req\\)",
        "ioutil\\.ReadAll\\s*\\(\\s*(?:r\\.|req\\.)",
        "(?:10\\.|172\\.(?:1[6-9]|2[0-9]|3[01])\\.|192\\.168\\.)\\d{1,3}\\.\\d{1,3}",
        "file:///|dict://|gopher://|ldap://",
        "169\\.254\\.169\\.254",
        "metadata\\.(?:google|azure|aws|alibaba)"
      ],
      "whitelist": [
        "^https?://[a-zA-Z0-9-]+\\.[a-zA-Z]{2,}(?:/[\\w\\-\\.]*)*$",
        "\\.(?:css|js|png|jpg|gif|svg|woff|ttf)$",
        "(?i)(?:README|LICENSE|CHANGELOG)",
        "(?i)example\\.(?:com|org|net)",
        "swagger\\.json",
        "openapi\\.yaml",
        "(?:test|mock|stub|fake).*(?:client|server)",
        "(?:unit|integration)test",
        "localhost:(?:3000|8080|4200|5000)",
        "(?:package|composer)\\.json",
        "(?:web|app)\\.config",
        "\\.env\\.(?:example|local)",
        "http://www\\.[a-zA-Z0-9-]+\\.(?:com|org)/license",
        "http://www\\.[a-zA-Z0-9-]+\\.(?:com|org)/copyright"
      ],
      "severity": "HIGH",
      "cweId": "CWE-918"
    },
    {
      "type": "NoSQL Injection",
      "fileExtensions": [ "*.js", "*.php", "*.py", "*.java", "*.cs", "*.rb", "*.go" ],
      "patterns": [
        "\\$(?:where|ne|gt|lt|in|or|and)(?:\\s*:|\\s+)",
        "\\$(?:exists|regex|elemMatch|size|type|mod)(?=\\s*:)",
        "\\$(?:text|where|expr)(?=\\s*:)",
        "(?:find|update|remove|delete|insert)\\s*\\(\\s*\\{[^}]*?\\$_(?:GET|POST|REQUEST)",
        "->(?:find|update|remove)\\s*\\(\\s*\\$(?:_GET|_POST|_REQUEST)",
        "\\$where\\s*:\\s*(?:function|\\{|\\()",
        "mapReduce\\s*\\(\\s*function",
        "eval\\s*\\([^)]*\\$",
        "db\\.collection\\([^)]*\\$",
        "ObjectId\\([^)]*\\$",
        "new\\s+MongoId\\([^)]*\\$",
        "\\.find\\(\\{[^}]*\\$(?!_?id\\b)",
        "\\.update\\(\\{[^}]*\\$(?!_?id\\b)",
        "\\.remove\\(\\{[^}]*\\$(?!_?id\\b)",
        "Model\\.where\\([^)]*\\$",
        "IMongoCollection\\.(?:Find|ReplaceOne|DeleteOne)\\([^)]*\\$",
        "MongoCollection\\.(?:find|replaceOne|deleteOne)\\([^)]*\\$",
        "\\$(?:set|unset|inc|mul|rename|push|pull)(?=\\s*:)(?![^{]*validate)",
        "\\$(?:addToSet|pop|pullAll|push\\.\\$each)(?=\\s*:)(?![^{]*validate)",
        "\\$errors\\[[^\\]]+\\](?!\\s*=\\s*__\\()",
        "\\$msg\\s*=(?!\\s*__\\()",
        "\\$_SESSION\\[[^\\]]+\\](?!\\s*=\\s*[''\\\"\\`])",
        "session_(?:unset|destroy)\\s*\\(\\s*\\$"
      ],
      "whitelist": [
        "\\.aggregate\\(\\s*\\[\\s*\\{\\s*\\$match",
        "\\.findOneAndUpdate\\(\\s*\\{\\s*[\"''`][\\w-]+[\"''`]",
        "\\.findOne\\(\\s*\\{\\s*[\"''`][\\w-]+[\"''`]",
        "\\.countDocuments\\(\\s*\\{\\s*[\"''`][\\w-]+[\"''`]",
        "->select\\(\\s*[\"''`][\\w\\s,]+[\"''`]\\s*\\)",
        "->where\\(\\s*[\"''`][\\w-]+[\"''`]\\s*,\\s*[\"''`]\\w+[\"''`]\\s*\\)",
        "->sort\\(\\s*\\{\\s*[\"''`][\\w-]+[\"''`]\\s*:\\s*-?1\\s*\\}\\s*\\)",
        "sanitizeQuery\\(\\s*\\{[^}]*\\}\\s*\\)",
        "validateQuery\\(\\s*\\{[^}]*\\}\\s*\\)",
        "escapeQuery\\(\\s*\\{[^}]*\\}\\s*\\)",
        "Schema\\.(?:find|update)One\\(\\s*\\{\\s*_id:\\s*ObjectId\\([\"''`][\\w-]+[\"''`]\\)\\s*\\}",
        "Model\\.(?:find|update)ById\\(\\s*[\"''`][\\w-]+[\"''`]\\s*\\)",
        "Repository\\.(?:find|save)\\(\\s*\\{\\s*id:\\s*\\d+\\s*\\}\\s*\\)",
        "validateSession\\(\\s*[\"''`][\\w-]+[\"''`]\\s*\\)",
        "validateToken\\(\\s*[\"''`][\\w-]+[\"''`]\\s*\\)",
        "validateAuth\\(\\s*\\{\\s*token:\\s*[\"''`][\\w-]+[\"''`]\\s*\\}\\s*\\)",
        "filter_input\\(\\s*INPUT_(?:GET|POST|COOKIE)\\s*,\\s*[\"''`][\\w-]+[\"''`]\\s*,\\s*FILTER_\\w+\\)",
        "htmlspecialchars\\(\\s*\\$\\w+\\s*,\\s*ENT_QUOTES\\)",
        "->findById\\(\\s*\\d+\\s*\\)",
        "->findByUuid\\(\\s*[\"''`][\\w-]+[\"''`]\\s*\\)",
        "->findOneBy\\(\\s*\\{\\s*[\"''`][\\w-]+[\"''`]\\s*:\\s*(?:\\d+|[\"''`][\\w-]+[\"''`]\\s*)\\}\\s*\\)"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-943"
    },
    {
      "type": "LDAP Injection",
      "fileExtensions": [ "*.php", "*.java", "*.cs", "*.py", "*.rb", "*.go", "*.cpp" ],
      "patterns": [
        "ldap_search\\s*\\(\\s*[^,]*\\$_(?:GET|POST|REQUEST)\\['([^']+)'\\]",
        "ldap_bind\\s*\\(\\s*[^,]*\\$_(?:GET|POST|REQUEST)\\['([^']+)'\\]",
        "ldap_read\\s*\\(\\s*[^,]*\\$_(?:GET|POST|REQUEST)\\['([^']+)'\\]",
        "ctx\\.search\\s*\\(\\s*[^;]*\\$(?:request\\.getParameter|params)",
        "ldapTemplate\\.search\\s*\\(\\s*[^;]*\\$(?:request\\.getParameter|params)",
        "DirectorySearcher\\.Filter\\s*=\\s*[^;]*\\$(?:Request\\.QueryString|Request\\.Form)",
        "LdapConnection\\.Search\\s*\\(\\s*[^;]*\\$(?:Request\\.QueryString|Request\\.Form)",
        "SearchRequest\\.Filter\\s*=\\s*[^;]*\\$(?:Request\\.QueryString|Request\\.Form)",
        "ldap\\.search_s\\s*\\(\\s*[^;]*(?:request\\.args|request\\.form)",
        "Connection\\.search\\s*\\(\\s*[^;]*(?:request\\.args|request\\.form)",
        "ldap\\.NewSearchRequest\\s*\\(\\s*(?:r\\.|req\\.)",
        "SearchRequest\\.BaseDN\\s*=\\s*(?:r\\.|req\\.)",
        "ldap\\.Search\\s*\\(\\s*(?:r\\.|req\\.)",
        "Net::LDAP\\.search\\s*\\(\\s*[^;]*\\$[^\\s]+",
        "ldap_search_ext_s\\s*\\(\\s*[^;]*\\$[^\\s]+",
        "userPassword\\s*=\\s*\\*\\)\\)",
        "objectClass\\s*=\\s*\\*\\)\\)",
        "\\)\\)\\s*\\(\\|\\(\\s*\\$",
        "\\(\\|\\(\\s*[^)]*\\*[^)]*\\$(?:_GET|_POST|_REQUEST)",
        "\\(\\&\\(\\s*[^)]*\\*[^)]*\\$(?:_GET|_POST|_REQUEST)"
      ],
      "whitelist": [
        "ldap_escape\\s*\\(",
        "LdapEncoder\\.encode\\s*\\(",
        "SecurityElement\\.Escape\\s*\\(",
        "AntiXss\\.LdapEncode\\s*\\(",
        "LdapUtils\\.escapeFilter",
        "validateLdapInput\\s*\\(",
        "sanitizeLdapFilter\\s*\\(",
        "escapeDN\\s*\\(",
        "EscapeDistinguishedName",
        "(?i)Copyright\\s*\\(c\\)",
        "(?i)Released under",
        "(?i)http://www\\.",
        "(?i)test_ldap",
        "(?i)mock_directory",
        "(?i)example\\.com",
        "(?i)localhost",
        "cli\\s*modules",
        "help\\s*=>\\s*['\\\"]{1}[^'\\\"]*['\\\"]{1}"
      ],
      "severity": "HIGH",
      "cweId": "CWE-90"
    },
    {
      "type": "Format String Injection",
      "fileExtensions": [ "*.c", "*.cpp", "*.php", "*.java", "*.cs", "*.py", "*.rb" ],
      "patterns": [
        "(?<!\\\\)(?<!%)(?<!@)(%[+-]?\\d*(?:\\.\\d+)?[diouxXeEfFgGaAcCsSp%n])(?!\\w)(?![^{]*})(?!.*?(?:__|Format::clean))",
        "(?<!\\\\)(?<!%)(?<!@)(%n)(?!\\w)",
        "(?i)(?<!safe_)(?:sprintf|printf|format)\\s*\\(\\s*\\$(?:_GET|_POST|_REQUEST|GLOBALS)\\[.+?\\]",
        "(?i)(?<!safe_)(?:f|s|sn|vs)?printf\\s*\\(\\s*([^,`\"]|`\"(?:[^`\"%]|%%)*`\")*%[^,\\s\\)]+[^\\)]*\\)",
        "(?i)(?<!@)(?:String\\.format|Format::sprintf)\\s*\\(\\s*(?:[^,`\"]|`\"[^`\"]*`\")*%[^,\\s\\)]+[^\\)]*\\)",
        "(?i)(?<!\\\\)(?:\\{[^{}]*\\}|%(?:\\(\\w+\\))?[-#0 +]*(?:\\d+|\\*)?(?:\\.\\d+|\\.\\*)?[hlL]?[diouxXeEfFgGcrsab%])",
        "(?i)(?:sprintf|vsprintf|fprintf)\\s*\\(\\s*\\$[^,\\s\\)]+\\s*,[^)]*\\)",
        "(?i)(select|insert|update|delete|exec|execute)\\s+.*?%.*?(from|values|set|where)"
      ],
      "whitelist": [
        "(?i)String\\.Format\\s*\\(\\s*CultureInfo\\.[^,]+,\\s*[^)]+\\)",
        "(?i)StringBuilder\\.AppendFormat\\s*\\(\\s*CultureInfo\\.[^,]+,\\s*[^)]+\\)",
        "(?i)string\\.Format\\s*\\(\\s*@[^)]+\\)",
        "(?i)String\\.Format\\s*\\(\\s*\\$`\"[^`\"]+`\"\\s*,[^)]+\\)",
        "\\$@`\"(?:[^`\"]|``[^])*`\"",
        "\\$`\"(?:[^`\"]|``[^])*`\"",
        "(?i)Resources\\.[A-Za-z0-9_]+\\.Format\\(",
        "(?i)ConfigurationManager\\.GetSection\\([^)]+\\)\\.Value",
        "(?i)ILogger\\.(Log|Debug|Info|Warn|Error)\\s*\\(\\s*LogLevel\\.[^,]+,\\s*[^)]+\\)",
        "(?i)_logger\\.(Log|Debug|Info|Warn|Error)\\s*\\(\\s*[^)]+\\)",
        "(?i)ValidateFormat\\s*\\(\\s*[^)]+\\)",
        "(?i)FormatValidator\\.IsValid\\s*\\(\\s*[^)]+\\)",
        "(?i)HttpUtility\\.HtmlEncode\\s*\\(\\s*[^)]+\\)",
        "(?i)WebUtility\\.HtmlEncode\\s*\\(\\s*[^)]+\\)",
        "`\"[^`\"]*(?:\\{[0-9]+\\}|\\{[a-zA-Z]+\\})[^`\"]*`\"",
        "@`\"[^`\"]*(?:\\{[0-9]+\\}|\\{[a-zA-Z]+\\})[^`\"]*`\""
      ],
      "severity": "HIGH",
      "cweId": "CWE-134"
    },
    {
      "type": "CSV Injection",
      "fileExtensions": [ "*.cs", "*.java", "*.py", "*.php", "*.go", "*.rb" ],
      "patterns": [
        "(?:Csv|CSV)(?:Helper|Reader|Writer)\\.(?:Read|Write|Parse)",
        "TextFieldParser\\.(?:Read|Parse)",
        "(?:Stream|String)(?:Reader|Writer)\\.(?:Read|Write)(?:Line|ToEnd)?",
        "File\\.(?:ReadAll|WriteAll)Text\\([^)]*\\.csv",
        "(?:File|Memory)Stream\\.(?:Read|Write|Seek)",
        "SqlBulk(?:Copy|Insert)\\.Write(?:To(?:Server|File))?",
        "DataTable\\.(?:Load|Write)(?:Xml|Csv)",
        "HttpPostedFile\\.(?:SaveAs|InputStream)",
        "Response\\.(?:Write|BinaryWrite)",
        "(?:CSV|OpenCSV)\\.(?:parse|read|write)",
        "(?:File|Buffered)(?:Reader|Writer)\\.(?:read|write)",
        "(?:csv|pandas)\\.(?:reader|writer|read_csv|to_csv)",
        "open\\([^)]*\\.(?:csv|txt)",
        "f(?:get|put)csv\\(",
        "file_(?:get|put)_contents\\([^)]*\\.csv",
        "encoding/csv\\.(?:NewReader|NewWriter)",
        "(?:io|os)\\.(?:Read|Write)File",
        "CSV\\.(?:read|write|open|foreach)",
        "File\\.(?:read|write|open)"
      ],
      "whitelist": [
        "^[\\w\\s.-]+\\.(?:csv|txt)$",
        "^\"[^=+\\-@<>|%\\t\\r\\n]+",
        "(?:sanitized|validated|safe|clean)_csv_\\w+",
        "csv_escape_[a-z0-9_]+",
        "Path\\.(?:GetFileName|GetFullPath)",
        "Server\\.MapPath",
        "File\\.Exists",
        "(?:Html|Url|CSV)Encode",
        "SecurityElement\\.Escape",
        ".*[Tt]est.*\\.(?:csv|txt)$",
        ".*[Mm]ock.*\\.(?:csv|txt)$",
        "CultureInfo\\.(?:Invariant|Current)Culture",
        "Encoding\\.(?:UTF8|Unicode|ASCII)",
        "FileMode\\.(?:Open|Create)",
        "^(?!.*[=+\\-@|%<>])[\\w\\s.-]+$",
        "^(?!.*(?:javascript|vbscript|data):)"
      ],
      "severity": "MEDIUM",
      "cweId": "CWE-1236"
    },
    {
      "type": "Server-Side Template Injection (SSTI)",
      "fileExtensions": [ "*.py", "*.java", "*.php", "*.cs", "*.rb", "*.go", "*.js" ],
      "patterns": [
        "\\{\\{(?:[^}]*\\$|[^}]*\\{\\{|\\%[^}]*\\%|[^}]*__[^}]*__)[^}]*\\}\\}",
        "\\$\\{(?:[^}]*\\$|[^}]*\\{|\\%[^}]*\\%|[^}]*Runtime)[^}]*\\}",
        "#\\{(?:[^}]*\\$|[^}]*\\{|[^}]*eval)[^}]*\\}",
        "\\[%(?:[^%]*\\$|[^%]*\\{|\\%[^%]*\\%)[^%]*%\\]",
        "@\\((?:[^)]*\\$|[^)]*\\{)[^)]*\\)",
        "(?:render|from_string)(?:_template)?_string\\s*\\([^)]*(?:request|input|params)[^)]*\\)",
        "Template\\s*\\([^)]*(?:request|input|params)[^)]*\\)\\.render",
        "Markup\\s*\\([^)]*(?:request|input|params)[^)]*\\)",
        "Template\\.(?:process|evaluate)\\s*\\([^)]*(?:request|input|params)[^)]*\\)",
        "VelocityEngine\\.evaluate\\s*\\([^)]*(?:request|input|params)[^)]*\\)",
        "StringTemplate\\.render\\s*\\([^)]*(?:request|input|params)[^)]*\\)",
        "Twig_Environment\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|input)[^)]*\\)",
        "\\$smarty->(?:display|fetch)\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|input)[^)]*\\)",
        "template_from_string\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|input)[^)]*\\)",
        "(?:Engine|RazorEngine|Template)\\.(?:Parse|Compile)\\s*\\([^)]*(?:Request|Input|QueryString)[^)]*\\)",
        "HtmlString\\s*\\([^)]*(?:Request|Input|QueryString)[^)]*\\)",
        "ERB\\.new\\s*\\([^)]*(?:params|request)[^)]*\\)",
        "(?:Liquid|Haml)::Template\\.(?:parse|new)\\s*\\([^)]*(?:params|request)[^)]*\\)",
        "template\\.(?:Parse|Execute|Must)\\s*\\([^)]*(?:r\\.|http\\.)[^)]*\\)",
        "(?:eval|exec|system|popen)\\s*\\([^)]*(?:\\$|request|input|params)[^)]*\\)",
        "(?:__class__|__globals__|__builtins__|__dict__|__base__|__subclasses__)",
        "(?:Runtime|Process|System)\\.(?:getRuntime|exec)\\s*\\(",
        "(?:os|subprocess|child_process)\\.(?:system|exec|spawn)",
        "new\\s+(?:Function|GeneratedExpression|DynamicMethod)"
      ],
      "whitelist": [
        "Html\\.(?:Raw|Encode|Sanitize)",
        "SecurityPolicy\\.(?:validate|sanitize)",
        "Sandbox\\.(?:render|execute)",
        "StrictTemplates\\.render",
        "autoEscape\\s*=\\s*true",
        "escape(?:Html|Javascript|Css|Url)",
        "sanitize(?:Html|Input|Output)",
        "encode(?:URI|HTML|ForHTML)",
        "htmlspecialchars",
        "SafeString\\s*\\(",
        "@Html\\.(?:Partial|RenderPartial)",
        "RenderSection",
        "DisplayFor",
        "(?:unit|integration)test",
        "mock(?:Template|Render)",
        "stub(?:Template|Render)",
        "(?:localhost|127\\.0\\.0\\.1)",
        "\\.(?:html|tpl|view|template)$",
        "\\.(?:css|js|jpg|png|gif)$",
        "(?:package|composer)\\.json$",
        "(?:gemfile|requirements)\\.txt$",
        "\\{\\%\\s*(?:include|extends|block|macro|set|if|for|raw)\\s",
        "@(?:model|using|inject)",
        "\\{\\%\\s*(?:autoescape|sandbox)\\s"
      ],
      "severity": "HIGH",
      "cweId": "CWE-94"
    },
    {
      "type": "OAuth Weaknesses",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb",
        "*.html"
      ],
      "patterns": [
        "(?:grant_type|response_type)\\s*[=:]\\s*['\"](?:password|client_credentials|token)['\"]",
        "oauth2?\\s*\\.\\s*(?:password|clientCredentials)Flow",
        "(?:localStorage|sessionStorage)\\.setItem\\s*\\(\\s*['\"](?:token|auth|access|jwt)['\"]",
        "document\\.cookie\\s*=\\s*['\"](?:token|auth|jwt)",
        "(?:access_token|refresh_token|id_token)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "Authorization\\s*:\\s*Bearer\\s+[^\\s\\)]+",
        "bearer_token\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?:code_verifier|code_challenge)\\s*[=:]\\s*['\"][^'\"]+['\"](?![^}]*S256)",
        "generateCodeChallenge\\s*\\([^)]*(?<!S256)[^)]*\\)",
        "client_secret\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "app_secret\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "oauth_secret\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "redirect_uri\\s*[=:]\\s*['\"](?:http://|[^https])[^'\"]+['\"]",
        "callback_url\\s*[=:]\\s*['\"](?:http://|[^https])[^'\"]+['\"]",
        "(?:set|store|save)(?:Access|Auth|Bearer)?Token\\s*\\([^)]*(?:params|request|input)",
        "token\\s*[=:]\\s*(?:params|request|input)",
        "state\\s*[=:]\\s*['\"][^'\"]+['\"](?![^}]*validate)",
        "oauth_state\\s*[=:]\\s*['\"][^'\"]+['\"](?![^}]*verify)",
        "jwt\\.(?:sign|verify|decode)\\s*\\([^,]*(?!privateKey|publicKey)[^)]*\\)",
        "JsonWebToken\\.(?:sign|verify|decode)\\s*\\([^,]*(?!privateKey|publicKey)[^)]*\\)",
        "new\\s+JWT\\s*\\([^)]*(?!secret)[^)]*\\)"
      ],
      "whitelist": [
        "grant_type\\s*[=:]\\s*['\"]authorization_code['\"]",
        "response_type\\s*[=:]\\s*['\"]code['\"]",
        "oauth2?\\s*\\.\\s*authorizationCodeFlow",
        "HttpOnly;\\s*Secure;\\s*SameSite=Strict",
        "cookie\\.httpOnly\\s*=\\s*true",
        "requireHttps\\s*=\\s*true",
        "code_challenge_method\\s*[=:]\\s*['\"]S256['\"]",
        "generateCodeChallenge\\s*\\([^)]*S256[^)]*\\)",
        "usePKCE\\s*\\(\\s*true\\s*\\)",
        "redirect_uri\\s*[=:]\\s*['\"]https://[^'\"]+['\"]",
        "validateRedirectUri\\s*\\(",
        "allowedRedirectUris",
        "validateState\\s*\\([^)]+\\)",
        "verifyState\\s*\\([^)]+\\)",
        "validateOAuthState",
        "jwt\\.verify\\s*\\([^,]+,\\s*publicKey[^)]*\\)",
        "jwt\\.sign\\s*\\([^,]+,\\s*privateKey[^)]*\\)",
        "useAuthorizationCodeFlow",
        "PKCE\\.generateCodeVerifier",
        "validateNonce",
        "validateAudience",
        "validateIssuer",
        "(?:unit|integration)test",
        "mock(?:OAuth|Token|Auth)",
        "test(?:Authorization|Authentication)",
        "example\\.com"
      ],
      "severity": "HIGH",
      "cweId": "CWE-352"
    },
    {
      "type": "Content Security Policy",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb",
        "*.html"
      ],
      "patterns": [
        "Content-Security-Policy[^:]*:\\s*[^;]*(?:unsafe-(?:inline|eval|hashes)|data:\\s*[^;]*script)",
        "meta\\s+http-equiv=['\"]Content-Security-Policy['\"][^>]*(?:unsafe-(?:inline|eval|hashes)|data:)",
        "(?:script|default|connect|frame)-src[^;]*\\*(?:[^;\\s]|$)",
        "frame-ancestors[^;]*\\*",
        "https?://[^/\\s]+\\*",
        "\\*\\.[^;\\s]+(?:$|[^-])",
        "SecurityPolicy\\.(?:disable|setEnabled\\s*\\(\\s*false)",
        "AddContentSecurityPolicy\\s*\\([^)]*none[^)]*\\)",
        "UseCsp\\s*\\([^)]*none[^)]*\\)",
        "header\\s*\\(\\s*['\"]Content-Security-Policy['\"][^;]*\\*[^;]*\\)",
        "CSP_(?:DEFAULT|SCRIPT|STYLE)_SRC\\s*=\\s*['\"][^'\"]*\\*",
        "SECURE_BROWSER_XSS_FILTER\\s*=\\s*False",
        "SecureHeaders\\.(?:skip|disable)CSP",
        "w\\.Header\\(\\)\\.Del\\(['\"]Content-Security-Policy['\"]\\)",
        "content_security_policy\\s+false",
        "config\\.content_security_policy\\s*=\\s*false",
        "SetContentSecurityPolicy\\s*\\([^)]*none[^)]*\\)",
        "Content-Security-Policy[^:]*:(?![^;]*(?:frame-ancestors|script-src))[^;]*;"
      ],
      "whitelist": [
        "SecurityPolicy\\.builder\\(\\)\\.(?:defaultSrc|scriptSrc)\\(['\"]self['\"]\\)",
        "AddContentSecurityPolicy\\(\\)\\.(?:DefaultSrc|ScriptSrc)\\(SecurityHeadersDefaults\\.Self\\)",
        "UseCsp\\s*\\(\\s*policy\\s*=>\\s*policy\\.Default\\.Self\\(\\)\\)",
        "header\\s*\\(\\s*['\"]Content-Security-Policy:\\s*default-src\\s+''self''['\"]",
        "CSP_DEFAULT_SRC\\s*=\\s*\\(['\"]self['\"]\\)",
        "SECURE_BROWSER_XSS_FILTER\\s*=\\s*True",
        "SecureHeaders\\.UseCSP",
        "w\\.Header\\(\\)\\.Set\\(['\"]Content-Security-Policy['\"],[^;]*self[^;]*\\)",
        "content_security_policy\\s+true",
        "config\\.content_security_policy_nonce_generator",
        "SetContentSecurityPolicy\\s*\\(['\"]default-src\\s+''self''['\"]",
        "script-src\\s+(?:''self''|''nonce-[a-zA-Z0-9+/=]{32,}'')",
        "default-src\\s+''self''",
        "frame-ancestors\\s+''none''",
        "object-src\\s+''none'';\\s*base-uri\\s+''none''",
        "upgrade-insecure-requests",
        "(?:unit|integration)test",
        "mock(?:CSP|SecurityHeaders)",
        "test(?:CSP|SecurityPolicy)",
        "localhost",
        "development"
      ],
      "severity": "HIGH",
      "cweId": "CWE-693"
    },
    {
      "type": "GraphQL Security",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb"
      ],
      "patterns": [
        "__(?:schema|type|typename)\\s*\\{[^}]*\\}",
        "IntrospectionQuery\\s*\\{[^}]*\\}",
        "queryType\\s*\\{\\s*name\\s*\\}",
        "graphql\\.(?:execute|executeAsync)\\s*\\([^)]*\\)\\s*(?!.*authenticate)",
        "DataFetchingEnvironment\\.getContext\\(\\)\\s*(?!.*auth)",
        "IResolverContext\\.(?:Resolver|FieldResolver)\\s*\\([^)]*\\)\\s*(?!.*authorize)",
        "UseGraphQL\\s*\\([^)]*\\)\\s*(?!.*authentication)",
        "makeExecutableSchema\\s*\\([^)]*\\)\\s*(?!.*auth)",
        "\\$graphql->execute\\s*\\([^)]*\\)\\s*(?!.*validate)",
        "graphene\\.(?:ObjectType|Schema)\\s*\\([^)]*\\)\\s*(?!.*auth)",
        "resolve_\\w+\\s*\\([^)]*\\)\\s*(?!.*permission)",
        "handler\\.GraphQL\\s*\\([^)]*\\)\\s*(?!.*auth)",
        "resolver\\.(?:Query|Mutation)\\s*\\{\\s*[^}]*\\}\\s*(?!.*authorize)",
        "query\\s*:\\s*['\"][^'\"]*\\$\\{",
        "variables\\s*:\\s*JSON\\.parse\\s*\\([^)]+\\)",
        "maxDepth\\s*:\\s*(?:\\d{3,}|null|undefined)",
        "maxComplexity\\s*:\\s*(?:\\d{4,}|null|undefined)",
        "limitRepeatedFields\\s*:\\s*false",
        "formatError\\s*:\\s*err\\s*=>\\s*err",
        "debug\\s*:\\s*(?:true|1)",
        "showErrors\\s*:\\s*(?:true|1)",
        "resolvers\\s*:\\s*\\{[^}]*\\}\\s*(?!.*validate)",
        "typeDefs\\s*=\\s*['\"][^'\"]*\\s*(?!.*sanitize)",
        "schemaDirectives\\s*:\\s*\\{[^}]*\\}"
      ],
      "whitelist": [
        "graphql\\.schema\\.GraphQLSchema\\.newSchema\\(\\)\\.query",
        "@GraphQLSecurity",
        "@PreAuthorize",
        "AuthorizeWithPolicy",
        "UseGraphQLAuthorization",
        "AddGraphQLAuth",
        "ValidateSchema",
        "GraphQLGuard",
        "AuthenticateRequest",
        "graphene\\.relay\\.Node\\.Field",
        "@login_required",
        "@permission_required",
        "WithQueryComplexity",
        "WithFieldComplexity",
        "AuthMiddleware",
        "maxQueryDepth\\s*:\\s*\\d{1,2}",
        "maxQueryComplexity\\s*:\\s*\\d{1,3}",
        "validateSchema\\s*:\\s*true",
        "requiresAuth\\s*:\\s*true",
        "sanitizeSchema\\s*:\\s*true",
        "(?:unit|integration)test",
        "mock(?:Resolver|Schema)",
        "test(?:Query|Mutation)",
        "localhost",
        "development"
      ],
      "severity": "HIGH",
      "cweId": "CWE-20"
    },
    {
      "type": "WebSocket Security",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb"
      ],
      "patterns": [
        "(?i)(new\\s+WebSocket\\s*\\(\\s*['\"]ws:\\/\\/)",
        "(?i)(WebSocket\\.(connect|open)\\s*\\(\\s*['\"]ws:\\/\\/)",
        "(?i)(socket\\.(connect|open)\\s*\\(\\s*['\"]ws:\\/\\/)",
        "(?i)(websocket\\.accept\\(\\s*\\)\\s*(?!(authenticate|verify)))",
        "(?i)(checkOrigin\\s*[:=]\\s*false)",
        "(?i)(validateOrigin\\s*[:=]\\s*false)",
        "(?i)(allowedOrigins\\s*[:=]\\s*['\"]\\*['\"])",
        "(?i)(ws\\.(send|emit)\\(\\s*(?!sanitize)[^)]*\\)(?!\\s*\\.catch))",
        "(?i)(socket\\.(send|emit)\\(\\s*(?!validate)[^)]*\\)(?!\\s*\\.catch))",
        "(?i)(JSON\\.parse\\s*\\(\\s*message\\s*\\)(?!\\s*\\.sanitize))",
        "(?i)((ws|socket)\\.(on|addEventListener)\\s*\\(['\"]error['\"]\\s*,\\s*function\\s*\\([^)]*\\)\\s*\\{\\s*\\})",
        "(?i)(catch\\s*\\(\\s*[^)]*\\)\\s*\\{\\s*\\})",
        "(?i)(maxConnections\\s*[:=]\\s*-1)",
        "(?i)(maxConnections\\s*[:=]\\s*null)",
        "(?i)(rateLimit\\s*[:=]\\s*(0|false|unlimited))"
      ],
      "whitelist": [
        "(?i)(new\\s+WebSocket\\s*\\(\\s*['\"]wss:\\/\\/)",
        "(?i)(WebSocket\\.(connect|open)\\s*\\(\\s*['\"]wss:\\/\\/)",
        "(?i)(authenticate(Token|Request)\\s*\\([^)]+\\))",
        "(?i)(verify(Origin|Token|Connection)\\s*\\([^)]+\\))",
        "(?i)(validate(Session|User )\\s*\\([^)]+\\))",
        "(?i)(sanitize(Input|Message|Data)\\s*\\([^)]+\\))",
        "(?i)(escape(Html|Script|Sql)\\s*\\([^)]+\\))",
        "(?i)(validate(Message|Payload)\\s*\\([^)]+\\))",
        "(?i)(errorHandler\\.(log|catch|handle)\\s*\\([^)]+\\))",
        "(?i)(catch\\s*\\([^)]+\\)\\s*\\{[\\s\\S]+logger\\.)",
        "(?i)(maxConnections\\s*[:=]\\s*\\d{1,5})",
        "(?i)(rateLimit\\s*\\(\\s*\\d+\\s*,\\s*\\d+\\s*\\))",
        "(?i)((test|mock)(WebSocket|Connection))",
        "(?i)((unit|integration)Test\\s*\\{)"
      ],
      "severity": "HIGH",
      "cweId": "CWE-20"
    },
    {
      "type": "CORS",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb"
      ],
      "patterns": [
        "Access-Control-Allow-Origin\\s*:\\s*\\*",
        "Access-Control-Allow-Origin\\s*:\\s*\\$?(?:_SERVER|request|origin)",
        "Access-Control-Allow-Credentials\\s*:\\s*true",
        "Access-Control-Allow-Methods\\s*:\\s*(?:\\*|all)",
        "Access-Control-Allow-Headers\\s*:\\s*(?:\\*|all)",
        "Access-Control-Expose-Headers\\s*:\\s*(?:\\*|all)",
        "Access-Control-Max-Age\\s*:\\s*\\d+",
        "\\$_SERVER\\[('|\")HTTP_ORIGIN|SERVER_NAME('|\")\\]",
        "header\\(\\s*['\"]Access-Control-Allow-Origin:\\s*('|\").*\\$",
        "response\\.setHeader\\(('|\")Access-Control-Allow-Origin('|\")\\s*,\\s*request\\.getHeader",
        "response\\.addHeader\\(('|\")Access-Control-Allow-Origin('|\")\\s*,\\s*[^)]+\\)",
        "@CrossOrigin\\s*\\(\\s*\\*\\s*\\)",
        "Response\\.Headers\\.Add\\(('|\")Access-Control-Allow-Origin('|\")\\s*,\\s*\\*\\)",
        "Response\\.Headers\\[('|\")Access-Control-Allow-Origin('|\")\\]\\s*=",
        "response\\[('|\")Access-Control-Allow-Origin('|\")\\]\\s*=",
        "add_header\\(('|\")Access-Control-Allow-Origin('|\")\\s*,\\s*\\*\\)",
        "w\\.Header\\(\\)\\.Set\\(('|\")Access-Control-Allow-Origin('|\")\\s*,\\s*\\*\\)",
        "cors\\.configure",
        "UseCors\\s*\\(\\s*\\*\\s*\\)",
        "setCorsConfiguration",
        "enableCors\\s*\\(\\s*\\*\\s*\\)",
        "WithOrigins\\s*\\(\\s*\\*\\s*\\)"
      ],
      "whitelist": [
        "^https?:\\/\\/([a-zA-Z0-9-]+\\.)*example\\.com$",
        "^\\/([\\w-]+\\/)*[\\w-]+$",
        "^(?!https?:\\/\\/)\\/?[\\w\\/\\-]+$",
        "builder\\.WithOrigins\\(('|\")[^\\*]+('|\")\\)",
        "app\\.UseCors\\(builder\\s*=>\\s*builder\\.WithOrigins\\(('|\")[^\\*]+('|\")\\)",
        "@CrossOrigin\\(origins\\s*=\\s*('|\")[^\\*]+('|\")\\)",
        "config\\.setAllowedOrigins\\(Arrays\\.asList\\(('|\")[^\\*]+('|\")\\)\\)",
        "header\\(('|\")Access-Control-Allow-Origin:\\s*('|\")https?:\\/\\/[^*]+('|\")\\)",
        "CORS\\(resources=\\{r\"\\/api\\/.*\":\\s*\\{('|\")origins('|\"):\\s*\\[('|\")[^\\*]+('|\")\\]\\}\\)",
        "cors\\.New\\(cors\\.Options\\{AllowedOrigins:\\s*\\[\\]('|\")[^\\*]+('|\")\\}\\)",
        "validateCorsOrigin",
        "checkOriginAgainstWhitelist",
        "isTrustedDomain",
        "corsValidator",
        "validateOrigin",
        "(?:unit|integration)test",
        "cors\\.config",
        "startup\\.",
        "program\\."
      ],
      "severity": "HIGH",
      "cweId": "CWE-345"
    },
    {
      "type": "Path Traversal",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb"
      ],
      "patterns": [
        "File\\s*\\(\\s*\\$?(?:_GET|_POST|_REQUEST|request|input|params)",
        "FileInputStream\\s*\\(\\s*\\$?(?:_GET|_POST|_REQUEST|request|input|params)",
        "FileReader\\s*\\(\\s*\\$?(?:_GET|_POST|_REQUEST|request|input|params)",
        "fopen\\s*\\(\\s*\\$(?:_GET|_POST|_REQUEST)\\s*\\[",
        "file_get_contents\\s*\\(\\s*\\$(?:_GET|_POST|_REQUEST)\\s*\\[",
        "include\\s*\\(\\s*\\$(?:_GET|_POST|_REQUEST)\\s*\\[",
        "require\\s*\\(\\s*\\$(?:_GET|_POST|_REQUEST)\\s*\\[",
        "File\\.(?:Open|Read|ReadAll(?:Text|Lines|Bytes))\\s*\\(\\s*(?:Request|input|params)",
        "Path\\.(?:Combine|Join)\\s*\\(\\s*(?:Request|input|params)",
        "StreamReader\\s*\\(\\s*(?:Request|input|params)",
        "open\\s*\\(\\s*(?:request\\.(?:args|form|files)|input|params)",
        "os\\.(?:path\\.join|open|read)\\s*\\(\\s*(?:request|input|params)",
        "(?:\\.\\.|\\.\\.%2f|\\.\\.%5c|\\.\\..\\\\|\\.\\.%255c)(?=.*?(?:include|require|open|read))",
        "(?:%2e%2e%2f|%2e%2e\\/|..%2f|%2e%2e%5c|%2e%2e\\\\)(?=.*?(?:file|path))",
        "(?:/etc/passwd|/etc/shadow|/proc/self)(?=.*?(?:read|open|get))",
        "c:\\\\windows\\\\system32(?=.*?(?:access|read|open))",
        "/var/www/(?:html|config)(?=.*?(?:include|require))"
      ],
      "whitelist": [
        "Path\\.GetFullPath\\s*\\(\\s*[^)]*\\)",
        "Path\\.GetFileName\\s*\\(\\s*[^)]*\\)",
        "SafeFileHandle",
        "validatePath\\s*\\(",
        "sanitizePath\\s*\\(",
        "normalizePath\\s*\\(",
        "canonicalizePath\\s*\\(",
        "HttpPostedFileBase",
        "IFormFile",
        "HostingEnvironment\\.MapPath",
        "Copyright \\(c\\)",
        "Released under",
        "http://www\\.",
        "\\.(?:jpg|jpeg|gif|png|ico|css|js)$",
        "^/(?:images|css|js|static)/",
        "require_once\\(",
        "include_once\\("
      ],
      "severity": "HIGH",
      "cweId": "CWE-22"
    },
    {
      "type": "CAPTCHA Defeat",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb"
      ],
      "patterns": [
        "(?i)(?:bypass|defeat|break|solve)\\s*captcha",
        "(?i)automated\\s*captcha\\s*(?:solver|bypass)",
        "captcha_?result\\s*=\\s*(?:true|1)",
        "skip_?captcha\\s*=\\s*(?:true|1)",
        "validateCaptcha\\s*\\(\\s*\\)\\s*{\\s*return\\s*true",
        "captcha_?verified\\s*=\\s*(?:true|1)",
        "response\\.status_code\\s*==\\s*200\\s*&&\\s*captcha",
        "ImageIO\\.read\\s*\\([^)]*captcha",
        "setCaptchaEnabled\\s*\\(\\s*false\\)",
        "imagecreatefrom(?:jpeg|png|gif)\\s*\\([^)]*captcha",
        "curl_setopt\\s*\\([^)]*CURLOPT_POSTFIELDS[^)]*captcha",
        "CaptchaImage\\.FromFile\\s*\\([^)]*\\)",
        "ValidateCaptcha\\s*=\\s*false",
        "pytesseract\\.image_to_string\\s*\\([^)]*captcha",
        "requests\\.post\\s*\\([^)]*captcha[^)]*bypass",
        "captcha\\.Disable\\(\\)",
        "SkipCaptchaValidation\\s*:\\s*true",
        "captcha_?token\\s*=\\s*['\"][^'\"]+['\"]",
        "session\\[['\"]captcha_?passed['\"]]\\s*=",
        "(?:2captcha|anticaptcha|deathbycaptcha)\\.solve",
        "captcha_?api_?key\\s*=\\s*['\"][^'\"]+['\"]"
      ],
      "whitelist": [
        "(?i)implement\\s*captcha\\s*security",
        "(?i)generate\\s*secure\\s*captcha",
        "validateCaptchaToken",
        "CaptchaVerificationMiddleware",
        "SecureCaptchaProvider",
        "test_captcha_implementation",
        "mock_captcha_service",
        "captcha_unit_test",
        "audio_captcha_alternative",
        "accessible_captcha_options",
        "captcha_accessibility_mode",
        "captcha_rate_limiter",
        "CaptchaThrottleService",
        "captcha_security_log",
        "monitor_captcha_attempts",
        "handle_captcha_failure",
        "invalid_captcha_response",
        "captcha_timeout_handler",
        "captcha_security_guide",
        "captcha_implementation_docs"
      ],
      "severity": "HIGH",
      "cweId": "CWE-20"
    },
    {
      "type": "Default or Misconfigured Setting",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb"
      ],
      "patterns": [
        "(?i)(?:debug|development)\\s*(?:mode|enabled|environment)\\s*=\\s*(?:true|1|on)",
        "(?i)show_errors\\s*=\\s*(?:true|1|on)",
        "(?i)display_errors\\s*=\\s*(?:true|1|on)",
        "(?i)error_reporting\\s*=\\s*(?:E_ALL|\\-1)",
        "WEB-INF/web.xml.*debug\\s*=\\s*\"true\"",
        "application.properties.*debug\\s*=\\s*true",
        "config.php.*display_errors\\s*=\\s*On",
        "web.config.*customErrors\\s*mode\\s*=\\s*\"Off\"",
        "(?i)auth(?:entication|orization)?\\s*(?:enabled|required)\\s*=\\s*(?:false|0|off)",
        "(?i)anonymous_access\\s*=\\s*(?:true|1|on)",
        "security\\.basic\\.enabled\\s*=\\s*false",
        "(?i)(?:ssl|tls)_?(?:enabled|required)\\s*=\\s*(?:false|0|off)",
        "(?i)verify_peer\\s*=\\s*(?:false|0)",
        "transport-guarantee>NONE",
        "ConnectionString.*(?:User  ID|Password)=[^;]+",
        "(?i)directory_(?:browsing|listing)\\s*=\\s*(?:true|1|on)",
        "Options\\s+Indexes\\s+FollowSymLinks",
        "(?i)session\\.cookie_secure\\s*=\\s*(?:false|0)",
        "(?i)session\\.cookie_httponly\\s*=\\s*(?:false|0)",
        "security-constraint>\\s*</security-constraint>",
        "web-resource-collection>\\s*</web-resource-collection>",
        "deserialize\\s*untrusted\\s*input\\s*=\\s*(?:true|1)",
        "java\\.security\\.manager\\s*=\\s*(?:disabled|off)",
        "expose_php\\s*=\\s*On",
        "allow_url_include\\s*=\\s*On",
        "open_basedir\\s*=\\s*(?:disabled|off)",
        "DEBUG\\s*=\\s*True",
        "SECURE_SSL_REDIRECT\\s*=\\s*False",
        "allow_unsafe_reload\\s*=\\s*(?:true|1)",
        "show_exceptions\\s*=\\s*(?:true|on)",
        "(?i)InsecureSkipVerify\\s*:\\s*true",
        "AllowInsecure\\s*:\\s*true",
        "pprof\\.enable\\s*=\\s*(?:true|1|on)",
        "debug_server\\s*=\\s*(?:true|1|on)",
        "config\\.force_ssl\\s*=\\s*false",
        "config\\.consider_all_requests_local\\s*=\\s*true",
        "development_mode\\s*=\\s*(?:true|1|on)",
        "exception_handling\\s*=\\s*(?:verbose|detailed)",
        "(?i)trust\\s*level\\s*=\\s*(?:full|all)",
        "validate_request\\s*=\\s*(?:false|0|off)",
        "security_level\\s*=\\s*(?:low|minimal)"
      ],
      "whitelist": [
        "(?i)(?:debug|development)\\s*(?:mode|enabled|environment)\\s*=\\s*(?:false|0|off)",
        "(?i)production\\s*(?:mode|environment)\\s*=\\s*(?:true|1|on)",
        "(?i)auth(?:entication|orization)?\\s*(?:enabled|required)\\s*=\\s*(?:true|1|on)",
        "security\\.basic\\.enabled\\s*=\\s*true",
        "(?i)(?:ssl|tls)_?(?:enabled|required)\\s*=\\s*(?:true|1|on)",
        "(?i)verify_peer\\s*=\\s*(?:true|1)",
        "transport-guarantee>CONFIDENTIAL",
        "(?i)session\\.cookie_secure\\s*=\\s*(?:true|1)",
        "(?i)session\\.cookie_httponly\\s*=\\s*(?:true|1)",
        "validate_request\\s*=\\s*(?:true|1|on)",
        "security_level\\s*=\\s*(?:high|strict)",
        "security-constraint>[^<]+</security-constraint>",
        "<user-data-constraint>[^<]+</user-data-constraint>",
        "java\\.security\\.manager\\s*=\\s*(?:enabled|on)",
        "expose_php\\s*=\\s*Off",
        "allow_url_include\\s*=\\s*Off",
        "open_basedir\\s*=\\s*(?:enabled|on)",
        "DEBUG\\s*=\\s*False",
        "SECURE_SSL_REDIRECT\\s*=\\s*True",
        "allow_unsafe_reload\\s*=\\s*(?:false|0)",
        "show_exceptions\\s*=\\s*(?:false|off)",
        "InsecureSkipVerify\\s*:\\s*false",
        "AllowInsecure\\s*:\\s*false",
        "pprof\\.enable\\s*=\\s*(?:false|0|off)",
        "config\\.force_ssl\\s*=\\s*true",
        "config\\.consider_all_requests_local\\s*=\\s*false",
        "development_mode\\s*=\\s*(?:false|0|off)",
        "exception_handling\\s*=\\s*(?:minimal|disabled)"
      ],
      "severity": "LOW",
      "cweId": "CWE-20"
    },
    {
      "type": "Insecure File Upload",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb"
      ],
      "patterns": [
        "(?<!\\w)MultipartFile\\s*\\(",
        "ServletFileUpload\\.",
        "(?<!\\w)FileItem\\.",
        "CSVReader",
        "CSVWriter",
        "FileReader",
        "FileWriter",
        "new\\s+File\\s*\\([^)]*\\)\\.createNewFile",
        "BufferedReader",
        "BufferedWriter",
        "move_uploaded_file\\s*\\(",
        "\\$_FILES",
        "copy\\s*\\(\\s*\\$_FILES",
        "fgetcsv",
        "fputcsv",
        "file_(?:get|put)_contents\\s*\\(\\s*\\$_FILES",
        "(?<!\\w)(HttpPostedFile(?:Base)?|IFormFile)\\s*\\(",
        "Request\\.Files\\s*\\[\\s*[\\'\"'][^\\'\"']+[\\'\"']\\s*\\]",
        "\\.SaveAs\\s*\\([^)]*\\)",
        "CsvReader\\s*\\(",
        "TextFieldParser\\s*\\(",
        "File\\.(ReadAllText|WriteAllText|Open|Create)\\s*\\(",
        "request\\.files\\.(?:get|getlist)\\s*\\(",
        "\\.save\\s*\\([^)]*\\)",
        "werkzeug\\.FileStorage",
        "csv\\.(?:reader|writer|DictReader|DictWriter)\\s*\\(",
        "pandas\\.(?:read_csv|to_csv)\\s*\\(",
        "params\\s*\\[\\s*:file\\s*\\]",
        "ActionDispatch::Http::UploadedFile",
        "CSV\\.(?:read|foreach|parse|open)\\s*\\(",
        "File\\.(?:open|read|write)\\s*\\(",
        "multipart\\.(?:FileHeader|Form\\.File)",
        "http\\.MaxBytesReader\\s*\\(",
        "\\.FormFile\\s*\\(",
        "csv\\.(?:NewReader|NewWriter)\\s*\\(",
        "ioutil\\.(?:ReadFile|WriteFile)\\s*\\(",
        "os\\.(?:Open|Create|OpenFile)\\s*\\(",
        "(?:std|boost)::filesystem::(?:path|create|copy|rename)\\s*\\(",
        "std::fstream\\s*\\(",
        "std::ofstream\\s*\\(",
        "(?i)upload.*?\\.(?:jsp|php|asp|aspx|exe|dll|bat|cmd|sh|cgi|pl|py|rb|htaccess)\\b",
        "(?<!secure)(?<!safe)Upload\\s*\\("
      ],
      "whitelist": [
        "ContentType\\.equals",
        "FilenameUtils\\.getExtension",
        "antivirus\\.scan",
        "FileValidator",
        "SecureFileUpload",
        "CSVValidator",
        "getimagesize",
        "mime_content_type",
        "pathinfo.*?PATHINFO_EXTENSION",
        "FileTypeValidator",
        "CSVSanitizer",
        "ValidateFileType",
        "IFileValidator",
        "AntiVirusScanner",
        "FileTypeValidator",
        "SecureUploadHandler",
        "CSVValidator",
        "SecureCSVReader",
        "secure_filename",
        "allowed_file",
        "validate_upload",
        "FileValidator",
        "CSVSanitizer",
        "UploadChecker",
        "FileValidator",
        "SecureFileUpload",
        "CSVValidator",
        "FileTypeGuard",
        "SecureUpload",
        "ValidateUpload",
        "CSVGuard",
        "sanitize.*?filename",
        "validate.*?(mime|extension|size|csv)",
        "MaxFileSize",
        "AllowedExtensions",
        "SecureFileHandler",
        "SafeFileUpload",
        "SecureCSVHandler",
        "(?i)Mock.*?FileUpload",
        "(?i)Test.*?Upload",
        "@Test"
      ],
      "severity": "HIGH",
      "cweId": "CWE-434"
    },
    {
      "type": "Unsecure Deserialization",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb"
      ],
      "patterns": [
        "BinaryFormatter\\.(?:Deserialize|UnsafeDeserialize)\\s*\\([^)]*\\)",
        "JavaScriptSerializer\\.Deserialize\\s*\\([^)]*TypeNameHandling\\s*[!=]=\\s*None\\)",
        "XmlSerializer\\.Deserialize\\s*\\([^)]*(?:Type\\.GetType|Assembly)\\)",
        "JsonConvert\\.DeserializeObject\\s*\\([^)]*TypeNameHandling\\s*[!=]=\\s*None\\)",
        "ObjectInputStream\\.readObject\\s*\\([^)]*\\)",
        "XMLDecoder\\.readObject\\s*\\([^)]*\\)",
        "ObjectMapper\\.readValue\\s*\\([^)]*\\)",
        "Yaml\\.(?:load|loadAll)\\s*\\([^)]*\\)",
        "unserialize\\s*\\(\\s*\\$(?:_GET|_POST|_COOKIE|_REQUEST)",
        "__wakeup\\s*\\(\\s*\\)",
        "__destruct\\s*\\(\\s*\\)",
        "phar:\\/\\/\\s*[^)]*",
        "pickle\\.(?:loads|load)\\s*\\([^)]*\\)",
        "yaml\\.(?:load|load_all)\\s*\\([^)]*\\)",
        "marshal\\.loads?\\s*\\([^)]*\\)",
        "jsonpickle\\.decode\\s*\\([^)]*\\)",
        "Marshal\\.(?:load|restore)\\s*\\([^)]*\\)",
        "YAML\\.(?:load|parse)\\s*\\([^)]*\\)",
        "JSON\\.load\\s*\\([^)]*\\)",
        "json\\.Unmarshal\\s*\\([^)]*\\)",
        "gob\\.NewDecoder\\s*\\([^)]*\\)\\.Decode",
        "yaml\\.Unmarshal\\s*\\([^)]*\\)",
        "Type\\.GetType\\s*\\([^)]*\\)",
        "Assembly\\.Load\\s*\\([^)]*\\)",
        "Activator\\.CreateInstance\\s*\\([^)]*\\)",
        "MethodInfo\\.Invoke\\s*\\([^)]*\\)"
      ],
      "whitelist": [
        "JsonConvert\\.DeserializeObject<[^>]+>\\s*\\(",
        "XmlSerializer\\s*\\([^)]*Type\\.GetType\\([^)]*\\)\\)",
        "new\\s+DataContractJsonSerializer\\s*\\([^)]*\\)",
        "ObjectMapper\\.configure\\(DeserializationFeature\\.FAIL_ON_UNKNOWN_PROPERTIES",
        "@JsonTypeInfo\\(use\\s*=\\s*JsonTypeInfo\\.Id\\.NONE\\)",
        "enableDefaultTyping\\(ObjectMapper\\.DefaultTyping\\.NONE\\)",
        "unserialize\\s*\\([^)]*\\[\\s*''allowed_classes''\\s*=>\\s*false\\s*\\]",
        "json_decode\\s*\\([^)]*\\)",
        "yaml\\.safe_load",
        "json\\.loads",
        "pickle\\.loads\\s*\\([^)]*\\)\\s*#\\s*nosec",
        "json\\.Unmarshal\\s*\\([^)]*&struct",
        "yaml\\.UnmarshalStrict",
        "encoding\\/json\\.Decoder",
        "validateDeserializedType",
        "SerializationBinder",
        "CustomSerializationBinder",
        "(?:unit|integration)test",
        "mock(?:Serializer|Deserializer)",
        "test(?:Deserialization|Serialization)",
        "localhost",
        "development"
      ],
      "severity": "HIGH",
      "cweId": "CWE-502"
    },
    {
      "type": "SQL Injection",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb"
      ],
      "patterns": [
        "(?i)(\\$\\w+\\s*\\.\\s*)*['\"\"]\\s*\\+\\s*\\$\\w+\\s*\\+\\s*['\"\"]",
        "(?i)['\"\"]\\s*\\.\\s*\\$\\w+\\s*\\.",
        "(?i)(mysql|mysqli|pdo)_(query|exec(ute)?)\\s*\\(\\s*[^,]+,\\s*['\"'][^'\"+]*(\\$\\w+|\\$_[A-Z]+\\[)[^'\"+]*['\"]",
        "(?i)(SELECT|INSERT|UPDATE|DELETE)(?:\\s+\\w+\\s+)*(?:INTO|FROM|WHERE|SET)\\s+.*?(\\$\\w+|\\$_[A-Z]+\\[)",
        "(?i)(WHERE|AND|OR)\\s+\\w+\\s*(=|LIKE|IN)\\s*(\\$\\w+|\\$_[A-Z]+\\[)",
        "(?i)(-\\>|\\$\\w+\\s*-\\>\\s*)?(query|exec(ute)?)\\s*\\(\\s*['\"'][^'\"+]*(\\$\\w+|\\$_[A-Z]+\\[)[^'\"+]*['\"]"
      ],
      "whitelist": [
        "(?i)(prepare|bind(Param|Value)|execute)\\s*\\(",
        "(?i)(-\\>|\\$\\w+\\s*-\\>\\s*)?(setParameter|setString|setInt)\\s*\\(",
        "(?i)(mysqli_real_escape_string|addslashes|htmlspecialchars|strip_tags)\\s*\\(",
        "(?i)(-\\>|\\$\\w+\\s*-\\>\\s*)?(createQuery|createNamedQuery|createNativeQuery)\\s*\\(",
        "^[\\s]*(//|/\\*|#)",
        "(?i)(@copyright|@license|Released under)",
        "(?i)(sprintf|vsprintf|printf)\\s*\\(",
        "(?i)require(_once)?\\s*\\(",
        "(?i)include(_once)?\\s*\\("
      ],
      "severity": "HIGH",
      "cweId": "CWE-89"
    },
    {
      "type": "Weak Password Policy",
      "fileExtensions": [
        "*.js",
        "*.java",
        "*.php",
        "*.cs",
        "*.py",
        "*.go",
        "*.rb"
      ],
      "patterns": [
        "minLength\\s*[:=]\\s*[1-11]\\b",
        "minimumLength\\s*[:=]\\s*[1-11]\\b",
        "min_length\\s*[:=]\\s*[1-11]\\b",
        "MIN_PWD_LENGTH\\s*[:=]\\s*[1-11]\\b",
        "password\\.length\\s*[<>=]\\s*[1-11]\\b",
        "(?i)require(?:Digit|Uppercase|Lowercase|Special|Symbol)s?\\s*[:=]\\s*(?:false|0|FALSE|False)",
        "(?i)password_requires?_(?:digit|upper|lower|special)\\s*[:=]\\s*(?:false|0|null)",
        "PASSWORD_COMPLEXITY\\s*[:=]\\s*(?:none|false|0)",
        "(?i)(?:password|pwd|pass)\\s*[:=]\\s*[\"'][^\"']+[\"'](?!\\s*\\{)",
        "(?i)connection(?:_|\\s)?string\\s*[:=]\\s*[\"'][^\"']*(?:pwd|password)[^\"']*[\"']",
        "(?<!\\w)(?:password|pwd)\\s*[:=]\\s*[\"'](?:123456789?|12345678?|1234|111111|123123)[\"'](?!\\w)",
        "(?<!\\w)(?:password|pwd)\\s*[:=]\\s*[\"'](?:password1?|admin\\d*|root|test|guest)[\"'](?!\\w)",
        "(?<!\\w)(?:password|pwd)\\s*[:=]\\s*[\"'](?:qwerty|abc123|letmein|welcome|monkey)[\"'](?!\\w)",
        "(?i)password\\s*[:=]\\s*[\"'](?:[^\"']*(?:password|admin|root|123)|[^\"']{1,7})[\"']",
        "(?i)credentials?\\s*[:=]\\s*[\"'][^\"']*(?:pass|pwd|admin)[^\"']*[\"']",
        "password\\.minLength\\s*[<]=?\\s*8",
        "(?i)password_min_length\\s*[:=]\\s*[1-7]",
        "RequireUppercase\\s*=\\s*false",
        "RequireNonAlphanumeric\\s*=\\s*false"
      ],
      "whitelist": [
        "(?i)Password(?:Validator|Policy|Service|Handler)",
        "(?i)Strong(?:Password|Security)(?:Policy|Validator|Config)",
        "(?i)SecurityPassword(?:Policy|Validator)",
        "(?i)(?:password|pwd)(?:Hash|Encrypt|Salt)",
        "(?i)(?:BCrypt|Argon2|PBKDF2|Scrypt)",
        "(?i)Hash(?:Password|Credential)s?",
        "(?i)Test(?:Password|Security|Auth)",
        "(?i)(?:Unit|Integration|Mock)Test",
        "\\.(?:test|spec|mock)\\.",
        "(?i)(?:README|EXAMPLE|SAMPLE|DOC)",
        "(?i)administrator\\s+(?:should|must|may|can)",
        "(?:example|sample|template)\\.(?:config|json|xml)",
        "\\.(?:template|sample|example)\\.",
        "(?i)dummy(?:_|\\s)?(?:password|credential)",
        "(?:config|settings)\\.(?:example|template)",
        "RequiredLength\\s*[>=]\\s*12",
        "RequireDigit\\s*=\\s*true",
        "RequireUppercase\\s*=\\s*true",
        "RequireNonAlphanumeric\\s*=\\s*true"
      ],
      "severity": "HIGH",
      "cweId": "CWE-521"
    },
    {
      "type": "Improper Error Handling",
      "fileExtensions": [ "*.js", "*.java", "*.php", "*.cs", "*.py", "*.go", "*.rb" ],
      "patterns": [
        "(?i)throw\\s*new\\s*Error\\s*\\(",
        "(?i)throw\\s*new\\s*Exception\\s*\\(",
        "(?i)console\\.error\\s*\\(",
        "(?i)print\\s*\\(\\s*['\"]Error['\"]",
        "(?i)log\\s*\\(\\s*['\"]Error['\"]",
        "(?i)catch\\s*\\(\\s*[^)]+\\)\\s*\\{\\s*[^}]*\\s*console\\.log\\s*\\(",
        "(?i)catch\\s*\\(\\s*[^)]+\\)\\s*\\{\\s*[^}]*\\s*print\\s*\\(",
        "(?i)catch\\s*\\(\\s*[^)]+\\)\\s*\\{\\s*[^}]*\\s*log\\s*\\(",
        "(?i)debug\\s*:\\s*(?:true|1)",
        "(?i)showErrors\\s*:\\s*(?:true|1)",
        "(?i)display_errors\\s*:\\s*(?:true|1)",
        "(?i)error_reporting\\s*:\\s*(?:E_ALL|\\-1)",
        "(?i)error\\s*:\\s*\\{[^}]*\\}",
        "(?i)formatError\\s*:\\s*err\\s*=>\\s*err",
        "(?i)debug\\s*:\\s*(?:true|1)",
        "(?i)showErrors\\s*:\\s*(?:true|1)",
        "(?i)Exception\\.ToString\\s*\\(",
        "(?i)printStackTrace\\s*\\(",
        "(?i)console\\.log\\s*\\(.*?error",
        "(?i)console\\.error\\s*\\(",
        "(?i)debug\\s*=\\s*true",
        "(?i)display_errors\\s*=\\s*On",
        "(?i)mysqli_error\\s*\\(",
        "(?i)mysql_error\\s*\\(",
        "(?i)PDOException\\s*\\(",
        "(?i)stackTrace\\s*\\(",
        "(?i)detailed_errors\\s*\\(",
        "(?i)show_detailed_errors\\s*\\("
      ],
      "whitelist": [
        "(?i)logError\\s*\\(\\s*[^)]+\\)",
        "(?i)handleError\\s*\\(\\s*[^)]+\\)",
        "(?i)errorHandler\\s*\\(\\s*[^)]+\\)",
        "(?i)catch\\s*\\(\\s*[^)]+\\)\\s*\\{\\s*[^}]*\\s*logger\\.",
        "(?i)catch\\s*\\(\\s*[^)]+\\)\\s*\\{\\s*[^}]*\\s*return\\s*\\{\\s*status\\s*:\\s*500\\s*\\}\\s*;",
        "(?i)catch\\s*\\(\\s*[^)]+\\)\\s*\\{\\s*[^}]*\\s*return\\s*\\{\\s*status\\s*:\\s*400\\s*\\}\\s*;",
        "(?i)error\\s*:\\s*\\{\\s*message\\s*:\\s*['\"]Internal Server Error['\"]\\s*\\}",
        "(?i)error\\s*:\\s*\\{\\s*message\\s*:\\s*['\"]Bad Request['\"]\\s*\\}",
        "(?i)error\\s*:\\s*\\{\\s*message\\s*:\\s*['\"]Not Found['\"]\\s*\\}",
        "(?i)error\\s*:\\s*\\{\\s*message\\s*:\\s*['\"]Unauthorized['\"]\\s*\\}"
      ],
      "severity": "LOW",
      "cweId": "CWE-390"
    },
    {
      "type": "Payment Card Data Exposure",
      "fileExtensions": [ "*.js", "*.php", "*.java", "*.cs", "*.py", "*.rb", "*.go", "*.sql" ],
      "patterns": [
        "(?i)(?:credit|debit)_?card_?(?:number|num|pan)\\s*[=:]\\s*['\"][0-9]{13,19}['\"]",
        "(?i)card_?(?:number|num|pan)\\s*[=:]\\s*['\"][0-9]{13,19}['\"]",
        "(?i)(?:cc|pan)_?(?:number|num)\\s*[=:]\\s*['\"][0-9]{13,19}['\"]",
        "(?i)cvv\\d?\\s*[=:]\\s*['\"][0-9]{3,4}['\"]",
        "(?i)(?:cvc|cvv|cid)\\s*[=:]\\s*['\"][0-9]{3,4}['\"]",
        "(?i)exp(?:iry)?_?(?:date|month|year)\\s*[=:]\\s*['\"][0-9]{2,4}['\"]",
        "(?i)(?:track\\d?|magnetic_stripe)_?data\\s*[=:]\\s*['\"][^'\"]*['\"]",
        "(?i)pin\\s*[=:]\\s*['\"][0-9]{4,8}['\"]",
        "SELECT\\s+.*?(?:credit_card|card_number|cvv|pin)\\s+FROM\\s+(?!encrypted_)",
        "INSERT\\s+INTO\\s+.*?(?:credit_card|card_number|cvv|pin)\\s*\\(",
        "UPDATE\\s+.*?SET\\s+.*?(?:credit_card|card_number|cvv|pin)\\s*=",
        "(?i)(?:cc|card)_?(?:encrypt|hash)\\s*=\\s*(?:false|0|off)",
        "(?i)store_?(?:card|cc|payment)_?(?:data|info)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:log|debug|console).*?(?:card_number|cvv|pin|track_data)",
        "(?i)(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})(?![0-9X*])"
      ],
      "whitelist": [
        "(?i)(?:encrypt|hash|mask|tokenize)_?(?:card|cc|payment)",
        "(?i)(?:pci|dss)_?compliant",
        "(?i)(?:card|cc)_?(?:mask|token|encrypted|hashed)",
        "(?i)\\*{4,}[0-9]{4}",
        "(?i)xxxx-xxxx-xxxx-",
        "(?i)test_?card_?(?:number|data)",
        "(?i)example\\.(?:com|org)",
        "(?i)sample_?(?:card|payment)",
        "(?i)mock_?(?:card|payment)",
        "(?i)dummy_?(?:card|payment)",
        "PCI_COMPLIANCE\\s*=\\s*true",
        "(?i)tokenization_?enabled",
        "(?i)secure_?vault"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-359"
    },
    {
      "type": "Financial Transaction Manipulation",
      "fileExtensions": [ "*.php", "*.java", "*.cs", "*.py", "*.rb", "*.js", "*.go", "*.sql" ],
      "patterns": [
        "(?i)(?:amount|price|total|balance)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params|input|request)",
        "(?i)UPDATE\\s+.*?(?:balance|amount|price|total)\\s*=\\s*(?:\\$|\\?|:)(?!.*WHERE.*user_id)",
        "(?i)(?:transfer|withdraw|deposit)_?amount\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:transaction|payment)_?amount\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:quantity|qty)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)(?![^}]*validate)",
        "(?i)(?:discount|fee|commission)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:interest|rate)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:shares|stock)_?(?:quantity|amount)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:bid|ask)_?price\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)market_?(?:price|value)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)portfolio_?(?:value|balance)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:credit|debit)_?limit\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)loan_?amount\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:salary|wage|income)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)tax_?(?:amount|rate)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:refund|chargeback)_?amount\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)currency_?(?:rate|conversion)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)account_?balance\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:bonus|penalty|fine)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:escrow|collateral)_?amount\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)"
      ],
      "whitelist": [
        "(?i)validate_?(?:amount|price|balance)",
        "(?i)sanitize_?(?:amount|price|balance)",
        "(?i)authorize_?(?:transaction|payment)",
        "(?i)verify_?(?:funds|balance|limit)",
        "(?i)is_numeric\\s*\\(",
        "(?i)filter_var\\s*\\([^,]*,\\s*FILTER_VALIDATE_FLOAT\\)",
        "(?i)decimal\\.TryParse",
        "(?i)Double\\.parseDouble",
        "(?i)Float\\.parseFloat",
        "(?i)currency_?validation",
        "(?i)amount_?validation",
        "(?i)financial_?validation",
        "(?i)transaction_?security",
        "(?i)audit_?trail",
        "(?i)compliance_?check",
        "(?i)risk_?assessment"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-472"
    },
    {
      "type": "Payment Gateway Security",
      "fileExtensions": [ "*.php", "*.java", "*.cs", "*.py", "*.rb", "*.js", "*.go" ],
      "patterns": [
        "(?i)(?:stripe|paypal|square|adyen)_?(?:secret|private)_?key\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:merchant|vendor)_?(?:id|key|secret)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:api|gateway)_?(?:key|secret|password)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:webhook|callback)_?(?:secret|key)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:payment|gateway)_?(?:url|endpoint)\\s*[=:]\\s*['\"]http://[^'\"]+['\"]",
        "(?i)(?:signature|hash)_?verification\\s*=\\s*(?:false|0|off)",
        "(?i)(?:ssl|tls)_?verify\\s*=\\s*(?:false|0|off)",
        "(?i)(?:webhook|ipn)_?verification\\s*=\\s*(?:false|0|off)",
        "(?i)(?:referer|origin)_?check\\s*=\\s*(?:false|0|off)",
        "(?i)(?:csrf|xsrf)_?(?:token|protection)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:amount|total)_?validation\\s*=\\s*(?:false|0|off)",
        "(?i)(?:currency|iso)_?validation\\s*=\\s*(?:false|0|off)",
        "(?i)(?:timeout|retry)_?limit\\s*[=:]\\s*(?:0|false|unlimited)",
        "(?i)(?:rate|request)_?limit\\s*[=:]\\s*(?:0|false|unlimited)",
        "(?i)(?:log|debug)_?(?:payment|transaction)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:sandbox|test)_?mode\\s*=\\s*(?:false|0|off)(?!.*production)",
        "(?i)(?:transaction|payment)_?(?:id|ref)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:success|cancel|fail)_?url\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:redirect|return)_?url\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:custom|metadata)_?data\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)(?![^}]*sanitize)"
      ],
      "whitelist": [
        "(?i)(?:encrypt|hash|secure)_?(?:key|secret)",
        "(?i)(?:environment|config)\\.(?:production|live)",
        "(?i)(?:test|sandbox|demo)_?(?:key|secret|mode)",
        "(?i)(?:ssl|tls)_?verify\\s*=\\s*(?:true|1|on)",
        "(?i)(?:signature|hash)_?verification\\s*=\\s*(?:true|1|on)",
        "(?i)(?:webhook|ipn)_?verification\\s*=\\s*(?:true|1|on)",
        "(?i)validate_?(?:signature|webhook|callback)",
        "(?i)verify_?(?:ssl|tls|certificate)",
        "(?i)(?:pci|compliance)_?(?:level|certified)",
        "(?i)(?:tokenization|vault)_?enabled",
        "(?i)(?:fraud|risk)_?(?:detection|prevention)",
        "(?i)(?:3ds|3d_secure)_?enabled",
        "(?i)(?:encryption|security)_?(?:enabled|required)",
        "(?i)(?:audit|logging)_?(?:enabled|required)",
        "(?i)(?:rate|request)_?limit\\s*[=:]\\s*[1-9]\\d*"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-311"
    },
    {
      "type": "Stock Trading & Financial API Security",
      "fileExtensions": [ "*.py", "*.js", "*.java", "*.cs", "*.php", "*.rb", "*.go" ],
      "patterns": [
        "(?i)(?:buy|sell|trade)_?(?:order|stock|share)\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|params|input)",
        "(?i)(?:market|limit|stop)_?order\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|params|input)",
        "(?i)(?:portfolio|position)_?(?:update|modify)\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|params|input)",
        "(?i)(?:account|balance)_?(?:transfer|withdraw)\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|params|input)",
        "(?i)(?:api|trading)_?(?:key|secret|token)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:broker|exchange)_?(?:api|key|secret)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:alpha_?vantage|yahoo|bloomberg|reuters)_?api_?key\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:stock|forex|crypto)_?(?:price|rate)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:dividend|earnings|split)_?(?:amount|ratio)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:margin|leverage)_?(?:ratio|amount)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:risk|exposure)_?limit\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:volatility|beta|correlation)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:hedge|derivative|option)_?(?:value|price)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:insider|material)_?(?:info|data)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:trade|order)_?(?:execution|fill)\\s*\\([^)]*(?!.*authorization)",
        "(?i)(?:cancel|modify)_?order\\s*\\([^)]*(?!.*permission)",
        "(?i)(?:high_frequency|algo)_?trading\\s*\\([^)]*(?!.*rate_limit)",
        "(?i)(?:pump|dump|manipulation)_?(?:detection|prevention)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:compliance|regulation)_?check\\s*=\\s*(?:false|0|off)",
        "(?i)(?:wash|spoofing|layering)_?(?:detection|prevention)\\s*=\\s*(?:false|0|off)"
      ],
      "whitelist": [
        "(?i)(?:authorize|authenticate)_?(?:trade|order|transaction)",
        "(?i)validate_?(?:trade|order|position)",
        "(?i)(?:risk|compliance)_?(?:check|validation|approval)",
        "(?i)(?:permission|authorization)_?(?:required|check)",
        "(?i)(?:rate|frequency)_?limit\\s*[=:]\\s*[1-9]\\d*",
        "(?i)(?:circuit|trading)_?breaker",
        "(?i)(?:audit|logging)_?(?:enabled|required)",
        "(?i)(?:encryption|security)_?(?:enabled|required)",
        "(?i)(?:2fa|mfa|multi_factor)_?(?:enabled|required)",
        "(?i)(?:sandbox|paper|demo)_?trading",
        "(?i)(?:test|mock|simulation)_?(?:environment|mode)",
        "(?i)(?:regulatory|compliance)_?(?:framework|standard)",
        "(?i)(?:fiduciary|best_execution)_?(?:duty|requirement)",
        "(?i)(?:market_maker|liquidity_provider)_?exemption",
        "(?i)(?:position|exposure)_?limit_check"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-754"
    },
    {
      "type": "Banking & Financial Institution Security",
      "fileExtensions": [ "*.java", "*.cs", "*.py", "*.php", "*.rb", "*.js", "*.go", "*.sql" ],
      "patterns": [
        "(?i)(?:account|iban|swift|routing)_?(?:number|code)\\s*[=:]\\s*['\"][0-9A-Z]{8,34}['\"]",
        "(?i)(?:sort|branch|bank)_?code\\s*[=:]\\s*['\"][0-9A-Z]{6,11}['\"]",
        "(?i)(?:bic|swift)_?code\\s*[=:]\\s*['\"][A-Z]{8,11}['\"]",
        "(?i)(?:account|customer)_?(?:id|number)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:wire|ach|sepa)_?transfer\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:loan|mortgage|credit)_?(?:application|approval)\\s*\\([^)]*(?!.*verify)",
        "(?i)(?:kyc|aml|cdd)_?(?:check|verification)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:sanctions|blacklist|pep)_?screening\\s*=\\s*(?:false|0|off)",
        "(?i)(?:fraud|suspicious)_?(?:detection|monitoring)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:transaction|activity)_?monitoring\\s*=\\s*(?:false|0|off)",
        "(?i)(?:regulatory|compliance)_?reporting\\s*=\\s*(?:false|0|off)",
        "(?i)(?:basel|ifrs|gaap)_?compliance\\s*=\\s*(?:false|0|off)",
        "(?i)(?:stress_test|capital_adequacy)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:liquidity|reserve)_?ratio\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:interest|yield|dividend)_?rate\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:collateral|security|guarantee)_?value\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:credit|risk)_?(?:score|rating)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:exposure|concentration)_?limit\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:provisioning|impairment)_?amount\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:insider|related_party)_?transaction\\s*\\([^)]*(?!.*approval)"
      ],
      "whitelist": [
        "(?i)(?:encrypt|hash|tokenize)_?(?:account|iban|swift)",
        "(?i)(?:kyc|aml|cdd)_?(?:verification|compliance)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:sanctions|blacklist|pep)_?screening\\s*=\\s*(?:true|1|on)",
        "(?i)(?:fraud|suspicious)_?(?:detection|monitoring)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:transaction|activity)_?monitoring\\s*=\\s*(?:true|1|on)",
        "(?i)(?:regulatory|compliance)_?reporting\\s*=\\s*(?:true|1|on)",
        "(?i)(?:audit|logging)_?(?:enabled|required)",
        "(?i)(?:segregation|firewall)_?(?:enabled|required)",
        "(?i)(?:dual|multi)_?(?:control|approval)",
        "(?i)(?:four_eyes|maker_checker)_?principle",
        "(?i)(?:risk|compliance)_?(?:officer|committee)",
        "(?i)(?:basel|ifrs|gaap|sox)_?compliant",
        "(?i)(?:pen_test|security_audit)_?required",
        "(?i)(?:encryption|tokenization)_?(?:enabled|required)",
        "(?i)(?:backup|disaster_recovery)_?(?:enabled|tested)"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-359"
    },
    {
      "type": "Cryptocurrency & Digital Asset Security",
      "fileExtensions": [ "*.js", "*.py", "*.java", "*.cs", "*.php", "*.rb", "*.go", "*.sol" ],
      "patterns": [
        "(?i)(?:private|secret)_?key\\s*[=:]\\s*['\"][0-9a-fA-F]{64}['\"]",
        "(?i)(?:mnemonic|seed)_?phrase\\s*[=:]\\s*['\"][^'\"]{100,}['\"]",
        "(?i)(?:wallet|address)_?(?:private|secret)\\s*[=:]\\s*['\"][0-9a-fA-F]{40,130}['\"]",
        "(?i)(?:bitcoin|ethereum|crypto)_?(?:private|secret)_?key\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:api|exchange)_?(?:key|secret)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:binance|coinbase|kraken|bitfinex)_?(?:api|secret)_?key\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:send|transfer)_?(?:crypto|bitcoin|ethereum)\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:withdraw|deposit)_?(?:amount|crypto)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:gas|fee)_?(?:price|limit)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:smart_contract|dapp)_?(?:deploy|execute)\\s*\\([^)]*(?!.*authorize)",
        "(?i)(?:token|coin)_?(?:mint|burn|issue)\\s*\\([^)]*(?!.*permission)",
        "(?i)(?:defi|yield|staking)_?(?:contract|pool)\\s*\\([^)]*(?!.*verify)",
        "(?i)(?:nft|collectible)_?(?:mint|transfer)\\s*\\([^)]*(?!.*ownership)",
        "(?i)(?:cold|hot)_?wallet_?(?:access|key)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:multi_sig|multisig)_?(?:disabled|off|false)",
        "(?i)(?:slippage|frontrun)_?protection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:reentrancy|overflow)_?protection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:flash_loan|arbitrage)_?(?:protection|limit)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:oracle|price_feed)_?validation\\s*=\\s*(?:false|0|off)",
        "(?i)(?:liquidity|sandwich)_?attack_?protection\\s*=\\s*(?:false|0|off)"
      ],
      "whitelist": [
        "(?i)(?:encrypt|hash|secure)_?(?:key|wallet|seed)",
        "(?i)(?:hardware|cold)_?wallet_?(?:required|enabled)",
        "(?i)(?:multi_sig|multisig)_?(?:enabled|required)",
        "(?i)(?:2fa|mfa|multi_factor)_?(?:enabled|required)",
        "(?i)(?:kyc|aml)_?(?:verification|compliance)",
        "(?i)(?:slippage|frontrun)_?protection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:reentrancy|overflow)_?protection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:flash_loan|arbitrage)_?(?:protection|limit)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:oracle|price_feed)_?validation\\s*=\\s*(?:true|1|on)",
        "(?i)(?:liquidity|sandwich)_?attack_?protection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:audit|security_review)_?(?:completed|passed)",
        "(?i)(?:test|mock|simulation)_?(?:environment|mode)",
        "(?i)(?:timelock|delay)_?(?:enabled|required)",
        "(?i)(?:governance|voting)_?(?:mechanism|required)",
        "(?i)(?:bug_bounty|security_audit)_?program"
      ],
      "severity": "CRITICAL",
      "cweId": "CWE-522"
    },
    {
      "type": "Insurance & Financial Risk Management",
      "fileExtensions": [ "*.java", "*.cs", "*.py", "*.php", "*.rb", "*.js", "*.go", "*.sql" ],
      "patterns": [
        "(?i)(?:premium|deductible|coverage)_?amount\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:claim|payout|settlement)_?amount\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:policy|contract)_?(?:value|sum_insured)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:actuarial|risk)_?(?:calculation|model)\\s*\\([^)]*(?!.*verify)",
        "(?i)(?:underwriting|approval)_?process\\s*\\([^)]*(?!.*authorization)",
        "(?i)(?:fraud|claim)_?detection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:medical|health)_?(?:record|data)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:ssn|social_security)_?number\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:driver|license)_?number\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:beneficiary|nominee)_?(?:update|change)\\s*\\([^)]*(?!.*verify)",
        "(?i)(?:reserve|solvency)_?ratio\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:reinsurance|catastrophe)_?model\\s*\\([^)]*(?!.*validation)",
        "(?i)(?:life|annuity)_?(?:table|calculation)\\s*\\([^)]*(?!.*audit)",
        "(?i)(?:disability|workers_comp)_?assessment\\s*\\([^)]*(?!.*verification)",
        "(?i)(?:auto|property|liability)_?(?:assessment|claim)\\s*\\([^)]*(?!.*investigation)"
      ],
      "whitelist": [
        "(?i)(?:fraud|claim)_?detection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:medical|health)_?(?:privacy|hipaa)_?compliant",
        "(?i)(?:encrypt|hash|secure)_?(?:medical|health|personal)_?data",
        "(?i)(?:actuarial|risk)_?(?:verification|validation)",
        "(?i)(?:underwriting|approval)_?(?:authorization|verification)",
        "(?i)(?:beneficiary|nominee)_?(?:verification|authorization)",
        "(?i)(?:reserve|solvency)_?(?:calculation|verification)",
        "(?i)(?:reinsurance|catastrophe)_?(?:validation|verification)",
        "(?i)(?:life|annuity)_?(?:audit|verification)",
        "(?i)(?:disability|workers_comp)_?(?:verification|investigation)",
        "(?i)(?:auto|property|liability)_?(?:investigation|verification)",
        "(?i)(?:audit|logging)_?(?:enabled|required)",
        "(?i)(?:compliance|regulatory)_?(?:check|verification)",
        "(?i)(?:privacy|data_protection)_?(?:compliance|enabled)",
        "(?i)(?:test|mock|simulation)_?(?:environment|mode)"
      ],
      "severity": "HIGH",
      "cweId": "CWE-754"
    },
    {
      "type": "Mobile Payment & Digital Wallet Security",
      "fileExtensions": [ "*.java", "*.kt", "*.swift", "*.js", "*.py", "*.cs", "*.php", "*.rb" ],
      "patterns": [
        "(?i)(?:apple_pay|google_pay|samsung_pay)_?(?:key|secret|token)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:paypal|venmo|zelle|cashapp)_?(?:api|secret)_?key\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:nfc|contactless)_?payment\\s*\\([^)]*(?!.*security)",
        "(?i)(?:biometric|fingerprint|face_id)_?(?:disabled|bypass)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:pin|passcode)_?(?:validation|check)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:secure_element|tee)_?(?:disabled|bypass)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:tokenization|dpan)_?(?:disabled|off)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:card_provisioning|enrollment)\\s*\\([^)]*(?!.*verification)",
        "(?i)(?:transaction_limit|daily_limit)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:merchant_category|mcc)_?validation\\s*=\\s*(?:false|0|off)",
        "(?i)(?:geo_location|geo_fence)_?(?:check|validation)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:device_binding|attestation)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:root|jailbreak)_?detection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:app_integrity|tamper)_?detection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:screenshot|screen_recording)_?protection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:background_app|task_switcher)_?protection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:clipboard|pasteboard)_?protection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:debug|developer)_?mode_?detection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:emulator|simulator)_?detection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:push_notification|fcm|apns)_?(?:token|key)\\s*[=:]\\s*['\"][^'\"]+['\"]"
      ],
      "whitelist": [
        "(?i)(?:biometric|fingerprint|face_id)_?(?:enabled|required)",
        "(?i)(?:pin|passcode)_?(?:validation|check)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:secure_element|tee)_?(?:enabled|required)",
        "(?i)(?:tokenization|dpan)_?(?:enabled|required)",
        "(?i)(?:merchant_category|mcc)_?validation\\s*=\\s*(?:true|1|on)",
        "(?i)(?:geo_location|geo_fence)_?(?:check|validation)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:device_binding|attestation)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:root|jailbreak)_?detection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:app_integrity|tamper)_?detection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:screenshot|screen_recording)_?protection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:background_app|task_switcher)_?protection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:clipboard|pasteboard)_?protection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:debug|developer)_?mode_?detection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:emulator|simulator)_?detection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:encrypt|hash|secure)_?(?:token|key|credential)",
        "(?i)(?:test|mock|demo)_?(?:environment|mode)",
        "(?i)(?:sandbox|development)_?(?:key|token)",
        "(?i)(?:pci|security)_?(?:compliant|certified)",
        "(?i)(?:fraud|risk)_?(?:detection|prevention)",
        "(?i)(?:3ds|3d_secure)_?enabled"
      ],
      "severity": "HIGH",
      "cweId": "CWE-311"
    },
    {
      "type": "Point of Sale (POS) System Security",
      "fileExtensions": [ "*.java", "*.cs", "*.py", "*.js", "*.php", "*.rb", "*.go", "*.c", "*.cpp" ],
      "patterns": [
        "(?i)(?:pos|terminal)_?(?:key|secret|password)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:merchant|store)_?(?:id|key|secret)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:card_reader|magnetic_stripe)_?(?:key|secret)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:emv|chip)_?(?:key|certificate)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:pin_pad|keypad)_?(?:key|encryption)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:cash_drawer|till)_?(?:amount|balance)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:inventory|stock)_?(?:update|modify)\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:discount|markup|tax)_?rate\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:loyalty|reward)_?points\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:gift_card|voucher)_?(?:balance|value)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:refund|return|void)_?transaction\\s*\\([^)]*(?!.*authorization)",
        "(?i)(?:receipt|invoice)_?(?:print|email)\\s*\\([^)]*(?!.*sanitize)",
        "(?i)(?:employee|cashier)_?(?:override|bypass)\\s*\\([^)]*(?!.*permission)",
        "(?i)(?:age_verification|id_check)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:transaction_log|audit_trail)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:offline|standalone)_?mode\\s*\\([^)]*(?!.*security)",
        "(?i)(?:usb|serial|bluetooth)_?(?:connection|port)\\s*\\([^)]*(?!.*encryption)",
        "(?i)(?:firmware|bios)_?update\\s*\\([^)]*(?!.*signature)",
        "(?i)(?:default|admin|root)_?(?:password|pin)\\s*[=:]\\s*['\"][^'\"]*['\"]",
        "(?i)(?:remote|telnet|ssh)_?access\\s*=\\s*(?:true|1|on)(?!.*secure)"
      ],
      "whitelist": [
        "(?i)(?:encrypt|hash|secure)_?(?:key|password|pin)",
        "(?i)(?:pci|pa_dss)_?(?:compliant|certified)",
        "(?i)(?:emv|chip)_?(?:certified|compliant)",
        "(?i)(?:pin_pad|keypad)_?(?:encryption|security)",
        "(?i)(?:age_verification|id_check)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:transaction_log|audit_trail)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:employee|cashier)_?(?:authorization|permission)",
        "(?i)(?:receipt|invoice)_?(?:sanitization|validation)",
        "(?i)(?:refund|return|void)_?(?:authorization|verification)",
        "(?i)(?:offline|standalone)_?(?:security|encryption)",
        "(?i)(?:usb|serial|bluetooth)_?(?:encryption|security)",
        "(?i)(?:firmware|bios)_?(?:signature|verification)",
        "(?i)(?:remote|telnet|ssh)_?(?:encryption|security)",
        "(?i)(?:test|demo|training)_?(?:mode|environment)",
        "(?i)(?:tamper|physical)_?(?:detection|protection)",
        "(?i)(?:backup|disaster_recovery)_?(?:enabled|tested)"
      ],
      "severity": "HIGH",
      "cweId": "CWE-311"
    },
    {
      "type": "Financial Reporting & Compliance Security",
      "fileExtensions": [ "*.java", "*.cs", "*.py", "*.php", "*.rb", "*.js", "*.go", "*.sql" ],
      "patterns": [
        "(?i)(?:financial|accounting)_?(?:report|statement)\\s*\\([^)]*(?!.*authorization)",
        "(?i)(?:sox|sarbanes_oxley)_?compliance\\s*=\\s*(?:false|0|off)",
        "(?i)(?:gaap|ifrs|fasb)_?compliance\\s*=\\s*(?:false|0|off)",
        "(?i)(?:audit|examiner)_?(?:access|trail)\\s*=\\s*(?:false|0|off)",
        "(?i)(?:journal|ledger)_?entry\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:revenue|expense|asset|liability)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:depreciation|amortization)_?(?:rate|amount)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:budget|forecast|projection)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:variance|allocation|accrual)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:consolidation|elimination)_?entry\\s*\\([^)]*(?!.*approval)",
        "(?i)(?:intercompany|related_party)_?transaction\\s*\\([^)]*(?!.*disclosure)",
        "(?i)(?:material|significant)_?(?:misstatement|error)_?detection\\s*=\\s*(?:false|0|off)",
        "(?i)(?:internal|management)_?control\\s*=\\s*(?:false|0|off)",
        "(?i)(?:segregation|separation)_?of_duties\\s*=\\s*(?:false|0|off)",
        "(?i)(?:maker|checker|approver)_?control\\s*=\\s*(?:false|0|off)",
        "(?i)(?:month|quarter|year)_?end_?(?:close|cutoff)\\s*\\([^)]*(?!.*control)",
        "(?i)(?:subsidiary|affiliate)_?(?:access|data)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:tax|regulatory)_?(?:report|filing)\\s*\\([^)]*(?!.*verification)",
        "(?i)(?:earnings|ebitda|eps)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:cash_flow|working_capital)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)"
      ],
      "whitelist": [
        "(?i)(?:sox|sarbanes_oxley)_?compliance\\s*=\\s*(?:true|1|on)",
        "(?i)(?:gaap|ifrs|fasb)_?compliance\\s*=\\s*(?:true|1|on)",
        "(?i)(?:audit|examiner)_?(?:access|trail)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:financial|accounting)_?(?:authorization|approval)",
        "(?i)(?:journal|ledger)_?(?:approval|verification)",
        "(?i)(?:consolidation|elimination)_?(?:approval|verification)",
        "(?i)(?:intercompany|related_party)_?(?:disclosure|verification)",
        "(?i)(?:material|significant)_?(?:misstatement|error)_?detection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:internal|management)_?control\\s*=\\s*(?:true|1|on)",
        "(?i)(?:segregation|separation)_?of_duties\\s*=\\s*(?:true|1|on)",
        "(?i)(?:maker|checker|approver)_?control\\s*=\\s*(?:true|1|on)",
        "(?i)(?:month|quarter|year)_?end_?(?:control|verification)",
        "(?i)(?:tax|regulatory)_?(?:verification|validation)",
        "(?i)(?:audit|logging)_?(?:enabled|required)",
        "(?i)(?:compliance|regulatory)_?(?:check|verification)",
        "(?i)(?:test|mock|simulation)_?(?:environment|mode)"
      ],
      "severity": "HIGH",
      "cweId": "CWE-284"
    },
    {
      "type": "Forex & Currency Exchange Security",
      "fileExtensions": [ "*.java", "*.cs", "*.py", "*.php", "*.rb", "*.js", "*.go" ],
      "patterns": [
        "(?i)(?:forex|fx|currency)_?(?:api|trading)_?(?:key|secret)\\s*[=:]\\s*['\"][^'\"]+['\"]",
        "(?i)(?:exchange|conversion)_?rate\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:currency|fx)_?(?:buy|sell|trade)\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:spot|forward|swap)_?(?:rate|price)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:leverage|margin)_?(?:ratio|requirement)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:pip|spread|commission)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:stop_loss|take_profit|limit)_?order\\s*\\([^)]*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:cross_rate|triangular)_?arbitrage\\s*\\([^)]*(?!.*validation)",
        "(?i)(?:central_bank|ecb|fed|boj)_?(?:rate|announcement)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:volatility|vix|correlation)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:carry|interest_rate)_?differential\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:liquidity|depth|orderbook)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:slippage|execution)_?(?:tolerance|limit)\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:position|exposure)_?size\\s*[=:]\\s*(?:\\$_(?:GET|POST|REQUEST)|params)",
        "(?i)(?:hedging|netting)_?(?:disabled|off)\\s*=\\s*(?:true|1|on)",
        "(?i)(?:risk|var|exposure)_?limit\\s*=\\s*(?:unlimited|0|false)",
        "(?i)(?:market|news|economic)_?feed\\s*\\([^)]*(?!.*authentication)",
        "(?i)(?:algo|automated|ea)_?trading\\s*\\([^)]*(?!.*rate_limit)",
        "(?i)(?:scalping|high_frequency)_?(?:allowed|enabled)\\s*=\\s*(?:true|1|on)(?!.*limit)",
        "(?i)(?:manipulation|spoofing)_?detection\\s*=\\s*(?:false|0|off)"
      ],
      "whitelist": [
        "(?i)(?:encrypt|hash|secure)_?(?:api|key|secret)",
        "(?i)(?:exchange|conversion)_?(?:validation|verification)",
        "(?i)(?:forex|fx|currency)_?(?:authorization|authentication)",
        "(?i)(?:cross_rate|triangular)_?(?:validation|verification)",
        "(?i)(?:hedging|netting)_?(?:enabled|required)",
        "(?i)(?:risk|var|exposure)_?limit\\s*[=:]\\s*[1-9]\\d*",
        "(?i)(?:market|news|economic)_?(?:authentication|verification)",
        "(?i)(?:algo|automated|ea)_?(?:rate_limit|throttling)",
        "(?i)(?:scalping|high_frequency)_?(?:limit|restriction)",
        "(?i)(?:manipulation|spoofing)_?detection\\s*=\\s*(?:true|1|on)",
        "(?i)(?:compliance|regulatory)_?(?:check|verification)",
        "(?i)(?:audit|logging)_?(?:enabled|required)",
        "(?i)(?:test|demo|paper)_?(?:trading|account)",
        "(?i)(?:sandbox|simulation)_?(?:environment|mode)",
        "(?i)(?:mifid|esma|cftc)_?compliant",
        "(?i)(?:circuit|volatility)_?breaker"
      ],
      "severity": "HIGH",
      "cweId": "CWE-754"
    },
    {
      "type": "Session and Authentication Management",
      "fileExtensions": [ "*.php", "*.java", "*.cs", "*.py", "*.rb", "*.js", "*.go" ],
      "patterns": [
        "(?i)\\b(session\\.(abandon|clear|destroy|invalidate|end|remove))\\b",
        "(?i)\\b(HttpContext\\.Session\\.(Clear|Remove))\\b",
        "(?i)\\b(request\\.getSession\\(\\w*\\)\\.invalidate)\\b",
        "(?i)\\b(session_(destroy|unset|regenerate_id))\\b",
        "(?i)(\\$_SESSION\\s*=\\s*(\\[\\]|array\\(\\)))",
        "(?i)\\b(session\\.(clear|pop|invalidate|destroy|reset_session))\\b",
        "(?i)\\b(Identity\\.(SignIn|SignOut)Async)\\b",
        "(?i)\\b(@Secured|\\@PreAuthorize|\\@RolesAllowed)\\b",
        "(?i)\\b(SecurityContextHolder\\.getContext\\(\\))\\b",
        "(?i)\\b(auth\\.(check|attempt|login|logout))\\b",
        "(?i)\\b(@login_required|@auth\\.requires_auth)\\b",
        "(?i)\\b(before_action :authenticate)\\b",
        "(?i)\\b(auth\\.RequireAuth|middleware\\.Auth)\\b",
        "(?i)\\b(jwt\\.(sign|verify|decode))\\b",
        "(?i)\\b(token\\.(create|validate|refresh))\\b",
        "(?i)\\b(JwtSecurityTokenHandler)\\b",
        "(?i)(cookie\\.(secure|httpOnly|sameSite)\\s*=\\s*(false|none))",
        "(?i)(Set-Cookie:.*?(secure|httpOnly))",
        "(?i)\\b(password\\.(hash|verify|validate))\\b",
        "(?i)\\b(credentials\\.(verify|validate))\\b",
        "(?i)\\b(bcrypt\\.(hash|compare))\\b",
        "(?i)\\b(mfa\\.(enable|verify|disable))\\b",
        "(?i)\\b(totp\\.(generate|verify))\\b",
        "(?i)\\b((memcached|redis)\\.set)\\b",
        "(?i)\\b(cache\\.(set|get|remove))\\b"
      ],
      "whitelist": [
        "(?i)(session\\.cookie_secure\\s*=\\s*true)",
        "(?i)(requireSSL\\s*=\\s*true)",
        "(?i)(UseHttps\\(\\))",
        "(?i)\\b(passwordHasher\\.HashPassword)\\b",
        "(?i)\\b(BCrypt\\.GenerateSalt\\(\\d+\\))\\b",
        "(?i)\\b(argon2|scrypt|pbkdf2)\\b",
        "(?i)(jwt\\.sign.*?algorithm:\\s*[\"''](?:HS256|RS256))",
        "(?i)(tokenValidation\\.validateLifetime\\s*=\\s*true)",
        "(?i)\\b(AddHeadersToResponse)\\b",
        "(?i)\\b(UseHsts\\(\\))\\b",
        "(?i)\\b(helmet\\.(use|config))\\b",
        "(?i)\\b(@ValidateAntiForgeryToken)\\b",
        "(?i)(csrf\\.required\\s*=\\s*true)",
        "(?i)\\b(antiforgery\\.(validate|verify))\\b",
        "(?i)(cookie\\.HttpOnly\\s*=\\s*true)",
        "(?i)(cookie\\.SameSite\\s*=\\s*Strict)",
        "(?i)\\b(https\\.use|requireHttps)\\b",
        "(?i)\\b(ForceSSL|RequireSSL)\\b",
        "(?i)(redis\\.(tls|ssl)\\.enable)",
        "(?i)(memcached\\.sasl)",
        "(?i)\\b(mock(Auth|Session|Token))\\b",
        "(?i)\\b(test(Authentication|Authorization))\\b"
      ],
      "severity": "HIGH",
      "cweId": "CWE-287"
    }

  ]
}